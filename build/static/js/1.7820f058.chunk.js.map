{"version":3,"file":"static/js/1.7820f058.chunk.js","mappings":"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","sources":["../node_modules/@scania/tegel/dist/esm/generateUniqueId-7934d315.js","../node_modules/@scania/tegel/dist/esm/inheritAriaAttributes-04f2f252.js","../node_modules/@scania/tegel/dist/esm/inheritAttributes-d21e267b.js","../node_modules/@scania/tegel/dist/esm/tds-header-launcher.entry.js"],"sourcesContent":["/**\n * Generates a reasonably unique string ID based on current time (minutes, seconds, milliseconds) and random numbers.\n *\n * This function combines the current time and random numbers to generate\n * a unique string ID. The function assumes that it won't be called frequently\n * enough to generate two identical IDs within a millisecond, or that the random\n * number generator will produce the same value twice in quick succession.\n *\n * Note: The IDs generated by this function are not globally unique and their length may vary.\n * For truly unique and fixed-length IDs, consider using a more robust method such as UUID.\n *\n * @returns {string} A unique string ID.\n */\nfunction generateUniqueId() {\n    const now = new Date();\n    const timeInMilliseconds = now.getMinutes() * 60000 + now.getSeconds() * 1000 + now.getMilliseconds(); // Get current time in milliseconds from the start of the hour\n    const randomNum1 = Math.floor(Math.random() * 1000000); // Random number between 0 and 999999\n    const randomNum2 = Math.floor(Math.random() * 1000000); // Another random number\n    // Convert to base 36 (using numbers and letters) and remove '0.' from the random number\n    const uniqueString = randomNum1.toString(36).substring(2) +\n        timeInMilliseconds.toString(36) +\n        randomNum2.toString(36).substring(2);\n    return uniqueString;\n}\n\nexport { generateUniqueId as g };\n","import { i as inheritAttributes } from './inheritAttributes-d21e267b.js';\n\n/**\n * List of available ARIA attributes + `role`.\n * Removed deprecated attributes.\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\n */\nconst ariaAttributes = [\n    'role',\n    'aria-activedescendant',\n    'aria-atomic',\n    'aria-autocomplete',\n    'aria-braillelabel',\n    'aria-brailleroledescription',\n    'aria-busy',\n    'aria-checked',\n    'aria-colcount',\n    'aria-colindex',\n    'aria-colindextext',\n    'aria-colspan',\n    'aria-controls',\n    'aria-current',\n    'aria-describedby',\n    'aria-description',\n    'aria-details',\n    'aria-disabled',\n    'aria-errormessage',\n    'aria-expanded',\n    'aria-flowto',\n    'aria-haspopup',\n    'aria-hidden',\n    'aria-invalid',\n    'aria-keyshortcuts',\n    'aria-label',\n    'aria-labelledby',\n    'aria-level',\n    'aria-live',\n    'aria-multiline',\n    'aria-multiselectable',\n    'aria-orientation',\n    'aria-owns',\n    'aria-placeholder',\n    'aria-posinset',\n    'aria-pressed',\n    'aria-readonly',\n    'aria-relevant',\n    'aria-required',\n    'aria-roledescription',\n    'aria-rowcount',\n    'aria-rowindex',\n    'aria-rowindextext',\n    'aria-rowspan',\n    'aria-selected',\n    'aria-setsize',\n    'aria-sort',\n    'aria-valuemax',\n    'aria-valuemin',\n    'aria-valuenow',\n    'aria-valuetext',\n];\n/**\n * Returns an array of aria attributes that should be copied from\n * the shadow host element to a target within the light DOM.\n * @param el The element that the attributes should be copied from.\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\n */\nconst inheritAriaAttributes = (el, ignoreList) => {\n    let attributesToInherit = ariaAttributes;\n    if (ignoreList && ignoreList.length > 0) {\n        attributesToInherit = attributesToInherit.filter((attr) => !ignoreList.includes(attr));\n    }\n    return inheritAttributes(el, attributesToInherit);\n};\n\nexport { inheritAriaAttributes as i };\n","/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n    const attributeObject = {};\n    attributes.forEach((attr) => {\n        if (el.hasAttribute(attr)) {\n            const value = el.getAttribute(attr);\n            if (value !== null) {\n                attributeObject[attr] = el.getAttribute(attr);\n            }\n            el.removeAttribute(attr);\n        }\n    });\n    return attributeObject;\n};\n\nexport { inheritAttributes as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { g as generateUniqueId } from './generateUniqueId-7934d315.js';\nimport { i as inheritAriaAttributes } from './inheritAriaAttributes-04f2f252.js';\nimport './inheritAttributes-d21e267b.js';\n\nconst headerLauncherCss = \":host .wrapper{height:var(--tds-header-height);position:relative}:host .wrapper .menu{flex-direction:column;overflow-y:auto;max-height:calc(100vh - var(--tds-header-height));box-shadow:var(--tds-nav-dropdown-menu-box);background-color:var(--tds-header-app-launcher-menu-background);border-radius:0}:host .wrapper .menu::-webkit-scrollbar{width:4px;background-color:inherit}:host .wrapper .menu::-webkit-scrollbar-thumb{background-color:var(--tds-grey-300)}:host .wrapper .menu ::-webkit-scrollbar-button{height:0;width:0}@media all and (max-width: 384px){:host .wrapper .menu{width:100vw}}:host .wrapper.state-list-type-menu .menu{height:calc(100vh - var(--tds-header-height))}:host .wrapper.state-open .button{position:relative;z-index:901}\";\nconst TdsHeaderLauncherStyle0 = headerLauncherCss;\n\nconst TdsHeaderLauncher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.uuid = generateUniqueId();\n        this.open = false;\n        this.buttonEl = undefined;\n        this.hasListTypeMenu = false;\n    }\n    onAnyClick(event) {\n        // Source: https://lamplightdev.com/blog/2021/04/10/how-to-detect-clicks-outside-of-a-web-component/\n        const isClickOutside = !event.composedPath().includes(this.host);\n        if (isClickOutside) {\n            this.open = false;\n        }\n    }\n    componentDidLoad() {\n        const hasListTypeMenu = !!this.host.querySelector('tds-header-launcher-list');\n        this.hasListTypeMenu = hasListTypeMenu;\n    }\n    toggleLauncher() {\n        this.open = !this.open;\n    }\n    render() {\n        this.ariaAttributes = Object.assign(Object.assign({}, this.ariaAttributes), inheritAriaAttributes(this.host, ['role']));\n        const buttonAttributes = Object.assign(Object.assign({}, this.ariaAttributes), { 'aria-expanded': `${this.open}`, 'aria-controls': `launcher-${this.uuid}`, 'class': 'button', 'active': this.open, 'onClick': () => {\n                this.toggleLauncher();\n            }, 'ref': (el) => {\n                this.buttonEl = el;\n            } });\n        return (h(Host, { key: '337abddb77f5d7b2ce7c1a8bcfe2dd5e60cc934c' }, h(\"div\", { key: '3652f71bd52be2fcbae7bfde3dab0b0c1c0c5d56', class: {\n                'wrapper': true,\n                'state-open': this.open,\n                'state-list-type-menu': this.hasListTypeMenu,\n            } }, h(\"tds-header-launcher-button\", Object.assign({ key: 'ffae6f54b57dcc0c44fae751f9da1025512b8f4b' }, buttonAttributes)), this.buttonEl && (h(\"tds-popover-canvas\", { id: `tds-launcher-${this.uuid}`, class: \"menu\", referenceEl: this.buttonEl, placement: \"bottom-start\", show: this.open, offsetDistance: 0, modifiers: [\n                {\n                    name: 'flip',\n                    options: {\n                        fallbackPlacements: [],\n                    },\n                },\n            ] }, this.open ? h(\"slot\", null) : null)))));\n    }\n    get host() { return getElement(this); }\n};\nTdsHeaderLauncher.style = TdsHeaderLauncherStyle0;\n\nexport { TdsHeaderLauncher as tds_header_launcher };\n"],"names":["generateUniqueId","now","Date","timeInMilliseconds","getMinutes","getSeconds","getMilliseconds","randomNum1","Math","floor","random","randomNum2","toString","substring","ariaAttributes","inheritAriaAttributes","el","ignoreList","attributesToInherit","length","filter","attr","includes","inheritAttributes","attributeObject","arguments","undefined","forEach","hasAttribute","getAttribute","removeAttribute","TdsHeaderLauncher","constructor","hostRef","registerInstance","this","uuid","open","buttonEl","hasListTypeMenu","onAnyClick","event","composedPath","host","componentDidLoad","querySelector","toggleLauncher","render","Object","assign","buttonAttributes","concat","onClick","h","Host","key","class","id","referenceEl","placement","show","offsetDistance","modifiers","name","options","fallbackPlacements","getElement","style"],"sourceRoot":""}