{"version":3,"file":"static/js/9234.d79ccf2a.chunk.js","mappings":"gIAaA,SAASA,IACL,MAAMC,EAAM,IAAIC,KACVC,EAAwC,IAAnBF,EAAIG,aAA0C,IAAnBH,EAAII,aAAsBJ,EAAIK,kBAC9EC,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BC,EAAaH,KAAKC,MAAsB,IAAhBD,KAAKE,UAKnC,OAHqBH,EAAWK,SAAS,IAAIC,UAAU,GACnDV,EAAmBS,SAAS,IAC5BD,EAAWC,SAAS,IAAIC,UAAU,EAE1C,C,kDCjBA,MAAMC,EAAUA,CAACC,EAAUC,MAAcA,EAAQC,cAAc,UAADC,OAAWH,EAAQ,M,mFCFjF,MAGMI,EAAW,MACbC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAWC,EAAAA,EAAAA,GAAYF,KAAM,WAAY,GAC9CA,KAAKG,YAAc,KACf,OAAQH,KAAKI,SACT,IAAK,cAQL,QACI,MAAO,OAPX,IAAK,QACD,MAAO,QACX,IAAK,UACD,MAAO,UACX,IAAK,UACD,MAAO,OAGf,EAEJJ,KAAKK,YAAc,KACOL,KAAKC,SAASK,KAAK,CACrCC,QAASP,KAAKO,UAECC,mBACfR,KAAKS,QAAS,EAClB,EAEJT,KAAKU,WAAa,KACQV,KAAKC,SAASK,KAAK,CACrCC,QAASP,KAAKO,UAECC,mBACfR,KAAKS,QAAS,EAClB,EAEJT,KAAKO,SAAU9B,EAAAA,EAAAA,KACfuB,KAAKW,YAASC,EACdZ,KAAKa,eAAYD,EACjBZ,KAAKI,QAAU,cACfJ,KAAKS,QAAS,EACdT,KAAKc,UAAW,EAChBd,KAAKe,UAAY,OACrB,CAEA,eAAMC,GACFhB,KAAKS,QAAS,CAClB,CAEA,eAAMQ,GACFjB,KAAKS,QAAS,CAClB,CACAS,MAAAA,GACI,MAAMC,GAAiB5B,EAAAA,EAAAA,GAAQ,SAAUS,KAAKoB,MACxCC,GAAoB9B,EAAAA,EAAAA,GAAQ,YAAaS,KAAKoB,MAC9CE,GAAkB/B,EAAAA,EAAAA,GAAQ,UAAWS,KAAKoB,MAChD,OAAQG,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,2CAA4CV,UAAWf,KAAKe,UAAW,mBAAoBf,KAAKoB,KAAKM,aAAa,oBAAqBC,MAAO,CAC7JC,KAAM5B,KAAKS,OACXoB,MAAO7B,KAAKS,UACXc,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CE,MAAO,sCAAFhC,OAEpEK,KAAKI,WAAamB,EAAAA,EAAAA,GAAE,WAAY,CAAEE,IAAK,2CAA4CK,KAAM9B,KAAKG,cAAe4B,KAAM,UAAWR,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CE,MAAO,YAAaJ,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CE,MAAO,oBAAsB3B,KAAKW,SAAUY,EAAAA,EAAAA,GAAE,MAAO,CAAEI,MAAO,UAAY3B,KAAKW,QAASQ,IAAkBI,EAAAA,EAAAA,GAAE,OAAQ,CAAEO,KAAM,WAAa9B,KAAKa,YAAaU,EAAAA,EAAAA,GAAE,MAAO,CAAEI,MAAO,aAAe3B,KAAKa,WAAYQ,IAAqBE,EAAAA,EAAAA,GAAE,OAAQ,CAAEO,KAAM,eAAiBR,IAAoBC,EAAAA,EAAAA,GAAE,MAAO,CAAEI,MAAO,gBAAFhC,OAAkB0B,GAAqBrB,KAAKa,UAAY,YAAc,kBAAoBU,EAAAA,EAAAA,GAAE,OAAQ,CAAEO,KAAM,cAAiB9B,KAAKc,WAAaS,EAAAA,EAAAA,GAAE,SAAU,CAAES,QAAShC,KAAKK,YAAasB,MAAO,UAAWJ,EAAAA,EAAAA,GAAE,WAAY,CAAEO,KAAM,QAASC,KAAM,WAC5yB,CACA,QAAIX,GAAS,OAAOa,EAAAA,EAAAA,GAAWjC,KAAO,GAE1CJ,EAASsC,MAlEQ,2lE","sources":["../node_modules/@scania/tegel/dist/esm/generateUniqueId-7934d315.js","../node_modules/@scania/tegel/dist/esm/hasSlot-d52114d0.js","../node_modules/@scania/tegel/dist/esm/tds-toast.entry.js"],"sourcesContent":["/**\n * Generates a reasonably unique string ID based on current time (minutes, seconds, milliseconds) and random numbers.\n *\n * This function combines the current time and random numbers to generate\n * a unique string ID. The function assumes that it won't be called frequently\n * enough to generate two identical IDs within a millisecond, or that the random\n * number generator will produce the same value twice in quick succession.\n *\n * Note: The IDs generated by this function are not globally unique and their length may vary.\n * For truly unique and fixed-length IDs, consider using a more robust method such as UUID.\n *\n * @returns {string} A unique string ID.\n */\nfunction generateUniqueId() {\n    const now = new Date();\n    const timeInMilliseconds = now.getMinutes() * 60000 + now.getSeconds() * 1000 + now.getMilliseconds(); // Get current time in milliseconds from the start of the hour\n    const randomNum1 = Math.floor(Math.random() * 1000000); // Random number between 0 and 999999\n    const randomNum2 = Math.floor(Math.random() * 1000000); // Another random number\n    // Convert to base 36 (using numbers and letters) and remove '0.' from the random number\n    const uniqueString = randomNum1.toString(36).substring(2) +\n        timeInMilliseconds.toString(36) +\n        randomNum2.toString(36).substring(2);\n    return uniqueString;\n}\n\nexport { generateUniqueId as g };\n","/**\n * Checks if the provided element has a slotted element\n * in the slot with the corresponding slotName\n * @param slotName the name of the slot.\n * @param element the element to look for the slot within.\n */\nconst hasSlot = (slotName, element) => !!element.querySelector(`[slot=\"${slotName}\"]`);\n\nexport { hasSlot as h };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { g as generateUniqueId } from './generateUniqueId-7934d315.js';\nimport { h as hasSlot } from './hasSlot-d52114d0.js';\n\nconst toastCss = \":host(.hide){display:none;visibility:hidden}:host{z-index:800}:host .wrapper{display:flex;width:348px;background-color:var(--tds-toast-background-color);border-radius:4px}:host .wrapper.information{border-left:4px solid var(--tds-information)}:host .wrapper.information tds-icon{color:var(--tds-information)}:host .wrapper.success{border-left:4px solid var(--tds-positive)}:host .wrapper.success tds-icon{color:var(--tds-positive)}:host .wrapper.error{border-left:4px solid var(--tds-negative)}:host .wrapper.error tds-icon{color:var(--tds-negative)}:host .wrapper.warning{border-left:4px solid var(--tds-warning)}:host .wrapper.warning tds-icon{color:var(--tds-warning)}:host .wrapper button.close{height:20px;width:20px;display:flex;align-items:center;justify-content:center;margin:14px 14px 0 22px;border:none;background:transparent}:host .wrapper button.close:hover{cursor:pointer}:host .wrapper button.close:focus{outline:2px solid var(--tds-blue-400);outline-offset:-2px}:host .wrapper button.close tds-icon{color:var(--tds-toast-dissmiss-color);padding:0}:host tds-icon{padding:14px 0 0 12px}:host .content{padding:16px 0 16px 10px;display:flex;flex-direction:column;flex:1;max-width:250px;word-break:break-word}:host .content .header-subheader{display:flex;flex-direction:column;gap:4px}:host .content .header,:host .content slot[name=header]::slotted(*){font:var(--tds-headline-07) !important;letter-spacing:var(--tds-headline-07-ls) !important;color:var(--tds-toast-headline-color)}:host .content .subheader,:host .content slot[name=subheader]::slotted(*){color:var(--tds-toast-subheadline-color);font:var(--tds-detail-02) !important;letter-spacing:var(--tds-detail-02-ls) !important}:host .content .subheader.no-link slot::slotted(*),:host .content slot[name=subheader]::slotted(*).no-link slot::slotted(*){padding-bottom:0}:host .content .toast-bottom{margin-top:12px}:host slot[name=actions]::slotted(*){color:var(--tds-toast-link-color)}:host .tds-mode-variant-primary{--tds-toast-background:var(--tds-toast-background-primary)}:host .tds-mode-variant-secondary{--tds-toast-background:var(--tds-toast-background-secondary)}\";\nconst TdsToastStyle0 = toastCss;\n\nconst TdsToast = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.tdsClose = createEvent(this, \"tdsClose\", 7);\n        this.getIconName = () => {\n            switch (this.variant) {\n                case 'information':\n                    return 'info';\n                case 'error':\n                    return 'error';\n                case 'warning':\n                    return 'warning';\n                case 'success':\n                    return 'tick';\n                default:\n                    return 'info';\n            }\n        };\n        this.handleClose = () => {\n            const tdsCloseEvent = this.tdsClose.emit({\n                toastId: this.toastId,\n            });\n            if (!tdsCloseEvent.defaultPrevented) {\n                this.hidden = true;\n            }\n        };\n        this.handleShow = () => {\n            const tdsCloseEvent = this.tdsClose.emit({\n                toastId: this.toastId,\n            });\n            if (!tdsCloseEvent.defaultPrevented) {\n                this.hidden = false;\n            }\n        };\n        this.toastId = generateUniqueId();\n        this.header = undefined;\n        this.subheader = undefined;\n        this.variant = 'information';\n        this.hidden = false;\n        this.closable = true;\n        this.toastRole = 'alert';\n    }\n    /** Hides the Toast. */\n    async hideToast() {\n        this.hidden = true;\n    }\n    /** Shows the Toast. */\n    async showToast() {\n        this.hidden = false;\n    }\n    render() {\n        const usesHeaderSlot = hasSlot('header', this.host);\n        const usesSubheaderSlot = hasSlot('subheader', this.host);\n        const usesActionsSlot = hasSlot('actions', this.host);\n        return (h(Host, { key: 'b4a35bad02fc58bae1ec849e9018b47da0471efa', toastRole: this.toastRole, \"aria-describedby\": this.host.getAttribute('aria-describedby'), class: {\n                hide: this.hidden,\n                show: !this.hidden,\n            } }, h(\"div\", { key: '302b734e22d80b84ec04378d019476b360913b7a', class: `\n            wrapper\n            ${this.variant}` }, h(\"tds-icon\", { key: 'abf3ed7b8c3116ddd180f5b05486f90f85e0ab35', name: this.getIconName(), size: \"20px\" }), h(\"div\", { key: 'd0ed5fb347cfaf7614961d8a70ddfe517713af70', class: `content` }, h(\"div\", { key: 'f12ef9ddf3005ce3b6397665f7dfbbc18050d88b', class: \"header-subheader\" }, this.header && h(\"div\", { class: \"header\" }, this.header), usesHeaderSlot && h(\"slot\", { name: \"header\" }), this.subheader && h(\"div\", { class: \"subheader\" }, this.subheader), usesSubheaderSlot && h(\"slot\", { name: \"subheader\" })), usesActionsSlot && (h(\"div\", { class: `toast-bottom ${usesSubheaderSlot || this.subheader ? 'subheader' : 'no-subheader'}` }, h(\"slot\", { name: \"actions\" })))), this.closable && (h(\"button\", { onClick: this.handleClose, class: \"close\" }, h(\"tds-icon\", { name: \"cross\", size: \"20px\" }))))));\n    }\n    get host() { return getElement(this); }\n};\nTdsToast.style = TdsToastStyle0;\n\nexport { TdsToast as tds_toast };\n"],"names":["generateUniqueId","now","Date","timeInMilliseconds","getMinutes","getSeconds","getMilliseconds","randomNum1","Math","floor","random","randomNum2","toString","substring","hasSlot","slotName","element","querySelector","concat","TdsToast","constructor","hostRef","registerInstance","this","tdsClose","createEvent","getIconName","variant","handleClose","emit","toastId","defaultPrevented","hidden","handleShow","header","undefined","subheader","closable","toastRole","hideToast","showToast","render","usesHeaderSlot","host","usesSubheaderSlot","usesActionsSlot","h","Host","key","getAttribute","class","hide","show","name","size","onClick","getElement","style"],"sourceRoot":""}