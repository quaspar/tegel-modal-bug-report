{"version":3,"file":"static/js/4774.9b5ee8cf.chunk.js","mappings":"iJAUA,MAAMA,EAAoB,SAACC,GACvB,MAAMC,EAAkB,CAAC,EAUzB,OAXqCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAE7BG,SAASC,IAChB,GAAIN,EAAGO,aAAaD,GAAO,CAET,OADAN,EAAGQ,aAAaF,KAE1BL,EAAgBK,GAAQN,EAAGQ,aAAaF,IAE5CN,EAAGS,gBAAgBH,EACvB,KAEGL,CACX,C,2ECnBA,MAGMS,EAAa,MACfC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,uBAAyB,CAC1B,CACIC,KAAM,eACNC,SAAS,EACTC,MAAO,OACPC,GAAIC,IAAe,IAAd,MAAEC,GAAOD,EACc,iBAApBC,EAAMC,WAAoD,gBAApBD,EAAMC,UAC5CR,KAAKS,OAAS,WAEW,eAApBF,EAAMC,WAAkD,eAApBD,EAAMC,UAC/CR,KAAKS,OAAS,YAEW,YAApBF,EAAMC,WAA+C,aAApBD,EAAMC,UAC5CR,KAAKS,OAAS,eAEW,cAApBF,EAAMC,WAAiD,cAApBD,EAAMC,UAC9CR,KAAKS,OAAS,cAEW,WAApBF,EAAMC,WAA8C,QAApBD,EAAMC,YAC3CR,KAAKS,OAAS,UAClB,IAIZT,KAAKU,oBAAsB,GAC3BV,KAAKW,KAAO,GACZX,KAAKY,SAAW,GAChBZ,KAAKa,iBAAcvB,EACnBU,KAAKc,kBAAmB,EACxBd,KAAKe,MAAO,EACZf,KAAKQ,UAAY,SACjBR,KAAKgB,eAAiB,EACtBhB,KAAKiB,eAAiB,CAC1B,CACAC,iBAAAA,GACIlB,KAAKU,qBAAsBzB,EAAAA,EAAAA,GAAkBe,KAAKmB,KAAM,CAAC,QAAS,SACtE,CACAC,MAAAA,GACI,IAAIC,EACJ,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,6CAA8CF,EAAAA,EAAAA,GAAE,mBAAoBG,OAAOC,OAAO,CAAEF,IAAK,4CAA8CxB,KAAKU,oBAAqB,CAAEiB,MAAO,CACzL,eAAe,EACf,CAAC,eAADC,OAAgB5B,KAAKS,UAAW,EAChC,CAA2C,QAAzCY,EAAKrB,KAAKU,oBAAoBiB,aAA0B,IAAPN,EAAgBA,EAAK,KAAK,EAC7E,mBAAoBrB,KAAKe,MAC1BH,SAAUZ,KAAKY,SAAUC,YAAab,KAAKa,YAAagB,QAAS7B,KAAKc,iBAAmB,gBAAkB,QAASgB,UAAW9B,KAAKC,uBAAwBe,eAAgBhB,KAAKgB,eAAgBC,eAAgBjB,KAAKiB,eAAgBF,KAAMf,KAAKe,KAAMP,UAAWR,KAAKQ,UAAWuB,UAAU,EAAOC,kBAAmBA,KACrThC,KAAKe,MAAO,CAAI,EACjBkB,mBAAoBA,KACnBjC,KAAKe,MAAO,CAAK,IACff,KAAKW,MAAMW,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,8CAC1C,CACA,QAAIL,GAAS,OAAOe,EAAAA,EAAAA,GAAWlC,KAAO,GAE1CJ,EAAWuC,MA1DQ,uhC","sources":["../node_modules/@scania/tegel/dist/esm/inheritAttributes-d21e267b.js","../node_modules/@scania/tegel/dist/esm/tds-tooltip.entry.js"],"sourcesContent":["/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n    const attributeObject = {};\n    attributes.forEach((attr) => {\n        if (el.hasAttribute(attr)) {\n            const value = el.getAttribute(attr);\n            if (value !== null) {\n                attributeObject[attr] = el.getAttribute(attr);\n            }\n            el.removeAttribute(attr);\n        }\n    });\n    return attributeObject;\n};\n\nexport { inheritAttributes as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { i as inheritAttributes } from './inheritAttributes-d21e267b.js';\n\nconst tooltipCss = \".sc-tds-tooltip:root,.tds-mode-light.sc-tds-tooltip{--tds-tooltip-background:var(--tds-grey-800);--tds-tooltip-color:var(--tds-white)}.tds-mode-dark.sc-tds-tooltip{--tds-tooltip-background:var(--tds-grey-200);--tds-tooltip-color:var(--tds-grey-958)}.tds-tooltip.sc-tds-tooltip{box-sizing:border-box;font:var(--tds-detail-05);letter-spacing:var(--tds-detail-05-ls);color:var(--tds-tooltip-color);background-color:var(--tds-tooltip-background);border-radius:4px;padding:8px;word-wrap:break-word;max-width:192px;z-index:900;opacity:0;visibility:hidden;transition:opacity 200ms ease-in, visibility 200ms ease-in}.tds-tooltip.sc-tds-tooltip *.sc-tds-tooltip{box-sizing:border-box}.tds-tooltip.tds-tooltip-top-left.sc-tds-tooltip{border-radius:0 4px 4px}.tds-tooltip.tds-tooltip-top-right.sc-tds-tooltip{border-radius:4px 0 4px 4px}.tds-tooltip.tds-tooltip-bottom-right.sc-tds-tooltip{border-radius:4px 4px 0}.tds-tooltip.tds-tooltip-bottom-left.sc-tds-tooltip{border-radius:4px 4px 4px 0}.tds-tooltip-show.sc-tds-tooltip{opacity:1;visibility:visible}\";\nconst TdsTooltipStyle0 = tooltipCss;\n\nconst TdsTooltip = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.popperjsExtraModifiers = [\n            {\n                name: 'positionCalc',\n                enabled: true,\n                phase: 'main',\n                fn: ({ state }) => {\n                    if (state.placement === 'bottom-start' || state.placement === 'right-start') {\n                        this.border = 'top-left';\n                    }\n                    else if (state.placement === 'bottom-end' || state.placement === 'left-start') {\n                        this.border = 'top-right';\n                    }\n                    else if (state.placement === 'top-end' || state.placement === 'left-end') {\n                        this.border = 'bottom-right';\n                    }\n                    else if (state.placement === 'top-start' || state.placement === 'right-end') {\n                        this.border = 'bottom-left';\n                    }\n                    else if (state.placement === 'bottom' || state.placement === 'top') {\n                        this.border = 'default';\n                    }\n                },\n            },\n        ];\n        this.inheritedAttributes = [];\n        this.text = '';\n        this.selector = '';\n        this.referenceEl = undefined;\n        this.mouseOverTooltip = false;\n        this.show = false;\n        this.placement = 'bottom';\n        this.offsetSkidding = 0;\n        this.offsetDistance = 8;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.host, ['style', 'class']);\n    }\n    render() {\n        var _a;\n        return (h(Host, { key: '0cf105738ffdc5463fb22a310e95e119b4e76cdd' }, h(\"tds-popover-core\", Object.assign({ key: '3ff8ccc3d104969b5c7f7f8ededf054f305f2df0' }, this.inheritedAttributes, { class: {\n                'tds-tooltip': true,\n                [`tds-tooltip-${this.border}`]: true,\n                [(_a = this.inheritedAttributes.class) !== null && _a !== void 0 ? _a : '']: true,\n                'tds-tooltip-show': this.show,\n            }, selector: this.selector, referenceEl: this.referenceEl, trigger: this.mouseOverTooltip ? 'hover-popover' : 'hover', modifiers: this.popperjsExtraModifiers, offsetSkidding: this.offsetSkidding, offsetDistance: this.offsetDistance, show: this.show, placement: this.placement, autoHide: false, onInternalTdsShow: () => {\n                this.show = true;\n            }, onInternalTdsClose: () => {\n                this.show = false;\n            } }), this.text, h(\"slot\", { key: 'b7a06b9f4875788c815f33a75d45dbb8a72f6393' }))));\n    }\n    get host() { return getElement(this); }\n};\nTdsTooltip.style = TdsTooltipStyle0;\n\nexport { TdsTooltip as tds_tooltip };\n"],"names":["inheritAttributes","el","attributeObject","arguments","length","undefined","forEach","attr","hasAttribute","getAttribute","removeAttribute","TdsTooltip","constructor","hostRef","registerInstance","this","popperjsExtraModifiers","name","enabled","phase","fn","_ref","state","placement","border","inheritedAttributes","text","selector","referenceEl","mouseOverTooltip","show","offsetSkidding","offsetDistance","componentWillLoad","host","render","_a","h","Host","key","Object","assign","class","concat","trigger","modifiers","autoHide","onInternalTdsShow","onInternalTdsClose","getElement","style"],"sourceRoot":""}