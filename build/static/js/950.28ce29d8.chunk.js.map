{"version":3,"file":"static/js/950.28ce29d8.chunk.js","mappings":"4KAEA,MAGMA,EAAW,MACbC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,MAAQ,GACbD,KAAKE,QAAS,EACdF,KAAKG,KAAO,KACZH,KAAKI,MAAQ,GACbJ,KAAKK,KAAO,EAChB,CACAC,UAAAA,GACIN,KAAKO,YACT,CACAC,iBAAAA,GACIR,KAAKO,YACT,CACAA,UAAAA,GACI,MAAME,EAAgBC,SAASV,KAAKC,OAC/BU,OAAOC,MAAMH,IAAgC,OAAdT,KAAKG,KAOlB,KAAfH,KAAKC,OAA8B,OAAdD,KAAKG,MAC1BU,QAAQC,KAAK,kFAPjBd,KAAKI,MAAQJ,KAAKC,MAAMc,WAAWC,QAAU,EAAI,OAAS,GAC1DhB,KAAKG,KAAO,KACZH,KAAKK,KAAOI,EAAcM,WAAWC,QAAU,EAAI,MAAQP,EAAcM,WAQjF,CACAE,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,IAAK,2CAA4CC,MAAO,uBAAFC,OAAyBrB,KAAKG,KAAI,KAAAkB,OAAmB,SAAfrB,KAAKI,MAAmB,iBAAmB,GAAE,KAAAiB,OAAIrB,KAAKE,OAAS,mBAAqB,MAAQgB,EAAAA,EAAAA,GAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAO,kBAAoBpB,KAAKK,MAC5S,CACA,mBAAWiB,GAAa,MAAO,CAC3B,MAAS,CAAC,cACV,KAAQ,CAAC,cACV,GAEP1B,EAAS2B,MAxCQ,iqB","sources":["../node_modules/@scania/tegel/dist/esm/tds-badge.entry.js"],"sourcesContent":["import { r as registerInstance, h } from './index-529974bd.js';\n\nconst badgeCss = \":host{--tds-badge-background-color:var(--tds-negative);--tds-badge-color-text:var(--tds-white);box-sizing:border-box;display:block}:host *{box-sizing:border-box}.tds-badge{display:block;border-radius:12px;background-color:var(--tds-badge-background-color);text-align:center}.tds-badge.tds-badge-sm{height:8px;width:8px;line-height:8px}.tds-badge.tds-badge-lg{height:20px;line-height:20px;width:20px}.tds-badge.tds-badge-pill{display:inline-block;width:unset;padding-left:8px;padding-right:8px}.tds-badge.tds-badge-hidden{display:none}.tds-badge-text{font-family:var(--tds-font-family-semi-condensed-bold);font-size:12px;color:var(--tds-badge-color-text);font-weight:bold}\";\nconst TdsBadgeStyle0 = badgeCss;\n\nconst TdsBadge = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.value = '';\n        this.hidden = false;\n        this.size = 'lg';\n        this.shape = '';\n        this.text = '';\n    }\n    watchProps() {\n        this.checkProps();\n    }\n    componentWillLoad() {\n        this.checkProps();\n    }\n    checkProps() {\n        const valueAsNumber = parseInt(this.value);\n        if (!Number.isNaN(valueAsNumber) && this.size !== 'sm') {\n            this.shape = this.value.toString().length >= 2 ? 'pill' : '';\n            this.size = 'lg';\n            this.text = valueAsNumber.toString().length >= 3 ? '99+' : valueAsNumber.toString();\n        }\n        else {\n            // eslint-disable-next-line no-unused-expressions, @typescript-eslint/no-unused-expressions\n            if (this.value !== '' && this.size !== 'sm') {\n                console.warn('The provided value is either empty or string, please provide value as number.');\n            }\n        }\n    }\n    render() {\n        return (h(\"host\", { key: 'edf6347da9742ae8353a33fa1613c0dd9170357b', class: `tds-badge tds-badge-${this.size} ${this.shape === 'pill' ? 'tds-badge-pill' : ''} ${this.hidden ? 'tds-badge-hidden' : ''}` }, h(\"div\", { key: '223c0b81e4de5e790daa011481bc45d7565e5cfc', class: \"tds-badge-text\" }, this.text)));\n    }\n    static get watchers() { return {\n        \"value\": [\"watchProps\"],\n        \"size\": [\"watchProps\"]\n    }; }\n};\nTdsBadge.style = TdsBadgeStyle0;\n\nexport { TdsBadge as tds_badge };\n"],"names":["TdsBadge","constructor","hostRef","registerInstance","this","value","hidden","size","shape","text","watchProps","checkProps","componentWillLoad","valueAsNumber","parseInt","Number","isNaN","console","warn","toString","length","render","h","key","class","concat","watchers","style"],"sourceRoot":""}