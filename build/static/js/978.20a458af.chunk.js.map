{"version":3,"file":"static/js/978.20a458af.chunk.js","mappings":"gLAEA,MAGMA,EAAqB,CACvB,mBACA,gBACA,cAEEC,EAAmB,MACrBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,eAAYC,EACjBF,KAAKG,aAAUD,EACfF,KAAKI,gBAAiB,EACtBJ,KAAKK,eAAYH,EACjBF,KAAKM,oBAAiBJ,EACtBF,KAAKO,eAAgB,EACrBP,KAAKQ,kBAAmB,EACxBR,KAAKS,eAAgB,EACrBT,KAAKU,YAAa,EAClBV,KAAKW,iBAAkB,EACvBX,KAAKY,QAAU,EACnB,CACAC,6BAAAA,CAA8BC,GACtBd,KAAKY,UAAYE,EAAMC,OAAOH,SAC9BE,EAAMC,OAAOC,QACRC,QAAQC,GAAgBvB,EAAmBwB,SAASD,KACpDE,SAASF,IACV,GAAiC,qBAAtBlB,KAAKkB,GACZ,MAAM,IAAIG,MAAM,gCAADC,OAAiCJ,IAEpDlB,KAAKkB,GAAeJ,EAAMC,OAAOG,EAAY,GAGzD,CAEAK,wBAAAA,CAAyBT,GACrB,MAAM,QAAEF,EAAO,IAAEY,GAAQV,EAAMC,OAC3BH,IAAYZ,KAAKY,UACjBZ,KAAKO,cAAgBP,KAAKG,UAAYqB,EAE9C,CAEAC,4BAAAA,CAA6BX,GACzB,MAAOY,EAAYC,EAAaC,GAAqBd,EAAMC,OACvDf,KAAKY,UAAYc,GACb1B,KAAKG,UAAYwB,IACb3B,KAAKK,UACLL,KAAKM,eAAiBN,KAAKK,UAG3BL,KAAKM,eAAiB,CAAC,OAAQ,QAAS,SAAU,QAAS,OAAOa,SAASS,GACrEA,EACA,OAItB,CACAC,iBAAAA,GACI7B,KAAK8B,QAAU9B,KAAK+B,KAAKC,QAAQ,aACjChC,KAAKY,QAAUZ,KAAK8B,QAAQlB,OAChC,CACAqB,iBAAAA,GACItC,EAAmByB,SAASc,IACxBlC,KAAKkC,GAAiBlC,KAAK8B,QAAQI,EAAc,IAEjDlC,KAAKK,YACLL,KAAKM,eAAiBN,KAAKK,UAEnC,CACA8B,MAAAA,GACI,IAAIC,EAAe,gCACfpC,KAAKI,eACLgC,EAAe,IAEVpC,KAAKS,gBACV2B,EAAe,8DAEnB,MAAMC,EAAgB,CAClBhC,UAAWL,KAAKM,eAEhBgC,QAASF,GAEb,OAAQG,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEhB,IAAK,2CAA4CiB,MAAO,CAClE,wBAAwB,EACxB,8BAA+BzC,KAAKO,cACpC,qBAAsBP,KAAKS,cAC3B,qBAAsBT,KAAKQ,iBAC3B,0BAA2BR,KAAKU,YACjCgC,MAAOL,GAAiBrC,KAAKC,WAAWsC,EAAAA,EAAAA,GAAE,OAAQ,CAAEf,IAAK,6CACpE,CACA,QAAIO,GAAS,OAAOY,EAAAA,EAAAA,GAAW3C,KAAO,GAE1CJ,EAAiB8C,MA7FQ,kvB","sources":["../node_modules/@scania/tegel/dist/esm/tds-body-cell.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\n\nconst tableBodyCellCss = \":host(.tds-table__body-cell){box-sizing:border-box;font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);display:table-cell;box-sizing:border-box;color:var(--tds-table-color);padding:var(--tds-spacing-element-16);min-width:192px;vertical-align:top;background-color:transparent;transition:background-color 200ms ease}:host(.tds-table__body-cell) *{box-sizing:border-box}:host(.tds-table__body-cell--hover){background-color:var(--tds-table-body-cell-background-hover)}:host(.tds-table__compact){padding:var(--tds-spacing-element-8) var(--tds-spacing-element-16)}:host(.tds-table--divider){border-right:1px solid var(--tds-table-divider)}:host(.tds-table--divider:last-of-type){border-right:none}:host(.tds-table--no-min-width){min-width:unset}\";\nconst TdsBodyCellStyle0 = tableBodyCellCss;\n\nconst relevantTableProps = [\n    'verticalDividers',\n    'compactDesign',\n    'noMinWidth',\n];\nconst TdsTableBodyCell = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.cellValue = undefined;\n        this.cellKey = undefined;\n        this.disablePadding = false;\n        this.textAlign = undefined;\n        this.textAlignState = undefined;\n        this.activeSorting = false;\n        this.verticalDividers = false;\n        this.compactDesign = false;\n        this.noMinWidth = false;\n        this.whiteBackground = false;\n        this.tableId = '';\n    }\n    internalTdsPropChangeListener(event) {\n        if (this.tableId === event.detail.tableId) {\n            event.detail.changed\n                .filter((changedProp) => relevantTableProps.includes(changedProp))\n                .forEach((changedProp) => {\n                if (typeof this[changedProp] === 'undefined') {\n                    throw new Error(`Table prop is not supported: ${changedProp}`);\n                }\n                this[changedProp] = event.detail[changedProp];\n            });\n        }\n    }\n    // Listen to headKey from table-header-element\n    internalTdsHoverListener(event) {\n        const { tableId, key } = event.detail;\n        if (tableId === this.tableId) {\n            this.activeSorting = this.cellKey === key;\n        }\n    }\n    // Listen to internalTdsTextAlign from table-header-element\n    internalTdsTextAlignListener(event) {\n        const [receivedID, receivedKey, receivedTextAlign] = event.detail;\n        if (this.tableId === receivedID) {\n            if (this.cellKey === receivedKey) {\n                if (this.textAlign) {\n                    this.textAlignState = this.textAlign;\n                }\n                else {\n                    this.textAlignState = ['left', 'start', 'center', 'right', 'end'].includes(receivedTextAlign)\n                        ? receivedTextAlign\n                        : 'left';\n                }\n            }\n        }\n    }\n    connectedCallback() {\n        this.tableEl = this.host.closest('tds-table');\n        this.tableId = this.tableEl.tableId;\n    }\n    componentWillLoad() {\n        relevantTableProps.forEach((tablePropName) => {\n            this[tablePropName] = this.tableEl[tablePropName];\n        });\n        if (this.textAlign) {\n            this.textAlignState = this.textAlign;\n        }\n    }\n    render() {\n        let paddingStyle = 'var(--tds-spacing-element-16)'; // Default padding\n        if (this.disablePadding) {\n            paddingStyle = '0';\n        }\n        else if (this.compactDesign) {\n            paddingStyle = 'var(--tds-spacing-element-8) var(--tds-spacing-element-16)';\n        }\n        const dynamicStyles = {\n            textAlign: this.textAlignState,\n            // Conditionally set padding style\n            padding: paddingStyle,\n        };\n        return (h(Host, { key: '56fe770734dd720139eb614489283e2ec81cc596', class: {\n                'tds-table__body-cell': true,\n                'tds-table__body-cell--hover': this.activeSorting,\n                'tds-table__compact': this.compactDesign,\n                'tds-table--divider': this.verticalDividers,\n                'tds-table--no-min-width': this.noMinWidth,\n            }, style: dynamicStyles }, this.cellValue, h(\"slot\", { key: '490a5caabb4a2ae94769875edb0743b474716e42' })));\n    }\n    get host() { return getElement(this); }\n};\nTdsTableBodyCell.style = TdsBodyCellStyle0;\n\nexport { TdsTableBodyCell as tds_body_cell };\n"],"names":["relevantTableProps","TdsTableBodyCell","constructor","hostRef","registerInstance","this","cellValue","undefined","cellKey","disablePadding","textAlign","textAlignState","activeSorting","verticalDividers","compactDesign","noMinWidth","whiteBackground","tableId","internalTdsPropChangeListener","event","detail","changed","filter","changedProp","includes","forEach","Error","concat","internalTdsHoverListener","key","internalTdsTextAlignListener","receivedID","receivedKey","receivedTextAlign","connectedCallback","tableEl","host","closest","componentWillLoad","tablePropName","render","paddingStyle","dynamicStyles","padding","h","Host","class","style","getElement"],"sourceRoot":""}