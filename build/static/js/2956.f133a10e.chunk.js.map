{"version":3,"file":"static/js/2956.f133a10e.chunk.js","mappings":"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","sources":["../node_modules/@scania/tegel/dist/esm/tds-dropdown-option.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-529974bd.js';\n\nconst dropdownOptionCss = \":host{box-sizing:border-box;display:block;background-color:var(--tds-dropdown-option-background)}:host *{box-sizing:border-box}:host .dropdown-option{color:var(--tds-dropdown-option-color);border-bottom:1px solid var(--tds-dropdown-option-border);font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);overflow-wrap:anywhere}:host .dropdown-option.selected{background-color:var(--tds-dropdown-option-background-selected)}:host .dropdown-option.disabled{color:var(--tds-dropdown-option-color-disabled)}:host .dropdown-option button:focus{outline:2px solid var(--tds-blue-400);outline-offset:-2px}:host .dropdown-option button{all:unset;width:100%}:host .dropdown-option button.lg{padding:19px 0 20px}:host .dropdown-option button.md{padding:15px 0 16px}:host .dropdown-option button.sm{padding:11px 0 12px}:host .dropdown-option button .single-select{display:flex;align-items:center;justify-content:space-between;padding:0 16px}:host .dropdown-option .multiselect{width:100%;height:100%}:host .dropdown-option .multiselect tds-checkbox{display:flex;height:100%;width:100%}:host .dropdown-option .multiselect tds-checkbox.lg{padding:15px 16px 16px}:host .dropdown-option .multiselect tds-checkbox.md{padding:11px 16px 12px}:host .dropdown-option .multiselect tds-checkbox.sm{padding:7px 16px 8px}:host .dropdown-option:hover{background-color:var(--tds-dropdown-option-background-hover);cursor:pointer}:host .dropdown-option:hover.disabled{background-color:var(--tds-dropdown-option-background);cursor:not-allowed}:host([hidden]){display:none}\";\nconst TdsDropdownOptionStyle0 = dropdownOptionCss;\n\nconst TdsDropdownOption = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.tdsSelect = createEvent(this, \"tdsSelect\", 6);\n        this.tdsFocus = createEvent(this, \"tdsFocus\", 6);\n        this.tdsBlur = createEvent(this, \"tdsBlur\", 6);\n        this.componentWillRender = () => {\n            this.parentElement =\n                this.host.parentElement.tagName === 'TDS-DROPDOWN'\n                    ? this.host.parentElement\n                    : this.host.getRootNode().host;\n            this.multiselect = this.parentElement.multiselect;\n            this.size = this.parentElement.size;\n            this.label = this.host.textContent.trim();\n        };\n        this.handleSingleSelect = () => {\n            if (!this.disabled) {\n                this.selected = true;\n                this.parentElement.appendValue(this.value);\n                this.parentElement.close();\n                this.tdsSelect.emit({\n                    value: this.value,\n                    selected: this.selected,\n                });\n            }\n        };\n        this.handleMultiselect = (event) => {\n            if (!this.disabled) {\n                if (event.detail.checked) {\n                    this.parentElement.appendValue(this.value);\n                    this.selected = true;\n                    this.tdsSelect.emit({\n                        value: this.value,\n                        selected: this.selected,\n                    });\n                }\n                else {\n                    this.parentElement.removeValue(this.value);\n                    this.selected = false;\n                    this.tdsSelect.emit({\n                        value: this.value,\n                        selected: this.selected,\n                    });\n                }\n                event.stopPropagation();\n            }\n        };\n        this.handleFocus = (event) => {\n            this.tdsFocus.emit(event);\n        };\n        this.handleBlur = (event) => {\n            this.tdsBlur.emit(event);\n        };\n        this.value = undefined;\n        this.disabled = false;\n        this.selected = false;\n        this.multiselect = undefined;\n        this.size = 'lg';\n    }\n    /** Method to select/deselect an option. */\n    async setSelected(selected) {\n        this.selected = selected;\n    }\n    render() {\n        return (h(Host, { key: '1f5f9d34955f65caa0ba5ec261368fa20277fc8f', role: \"option\", \"aria-disabled\": this.disabled, \"aria-selected\": this.selected }, h(\"div\", { key: 'ccab6344954996ec23558a2e39826008873d2827', class: `dropdown-option \n          ${this.size}\n          ${this.selected ? 'selected' : ''}\n          ${this.disabled ? 'disabled' : ''}\n          ` }, this.multiselect ? (h(\"div\", { class: \"multiselect\", onKeyDown: (event) => {\n                if (event.key === 'Escape') {\n                    this.parentElement.close();\n                }\n            } }, h(\"tds-checkbox\", { onTdsChange: (event) => {\n                this.handleMultiselect(event);\n            }, disabled: this.disabled, checked: this.selected, class: {\n                [this.size]: true,\n            } }, h(\"div\", { slot: \"label\" }, h(\"slot\", null))))) : (h(\"button\", { onClick: () => {\n                this.handleSingleSelect();\n            }, onFocus: (event) => this.handleFocus(event), onBlur: (event) => this.handleBlur(event), disabled: this.disabled, class: this.size }, h(\"div\", { class: \"single-select\" }, h(\"slot\", null), this.selected && h(\"tds-icon\", { name: \"tick\", size: \"16px\" })))))));\n    }\n    static get delegatesFocus() { return true; }\n    get host() { return getElement(this); }\n};\nTdsDropdownOption.style = TdsDropdownOptionStyle0;\n\nexport { TdsDropdownOption as tds_dropdown_option };\n"],"names":["TdsDropdownOption","constructor","hostRef","registerInstance","this","tdsSelect","createEvent","tdsFocus","tdsBlur","componentWillRender","parentElement","host","tagName","getRootNode","multiselect","size","label","textContent","trim","handleSingleSelect","disabled","selected","appendValue","value","close","emit","handleMultiselect","event","detail","checked","removeValue","stopPropagation","handleFocus","handleBlur","undefined","setSelected","render","h","Host","key","role","class","concat","onKeyDown","onTdsChange","slot","onClick","onFocus","onBlur","name","delegatesFocus","getElement","style"],"sourceRoot":""}