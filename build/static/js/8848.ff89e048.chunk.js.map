{"version":3,"file":"static/js/8848.ff89e048.chunk.js","mappings":"+JAOA,MAAMA,EAAiB,CACnB,OACA,wBACA,cACA,oBACA,oBACA,8BACA,YACA,eACA,gBACA,gBACA,oBACA,eACA,gBACA,eACA,mBACA,mBACA,eACA,gBACA,oBACA,gBACA,cACA,gBACA,cACA,eACA,oBACA,aACA,kBACA,aACA,YACA,iBACA,uBACA,mBACA,YACA,mBACA,gBACA,eACA,gBACA,gBACA,gBACA,uBACA,gBACA,gBACA,oBACA,eACA,gBACA,eACA,YACA,gBACA,gBACA,gBACA,kBASEC,EAAwBA,CAACC,EAAIC,KAC/B,IAAIC,EAAsBJ,EAI1B,OAHIG,GAAcA,EAAWE,OAAS,IAClCD,EAAsBA,EAAoBE,QAAQC,IAAUJ,EAAWK,SAASD,OAE7EE,EAAAA,EAAAA,GAAkBP,EAAIE,EAAoB,C,kCC9DrD,MAAMK,EAAoB,SAACP,GACvB,MAAMQ,EAAkB,CAAC,EAUzB,OAXqCC,UAAAN,OAAA,QAAAO,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAE7BE,SAASN,IAChB,GAAIL,EAAGY,aAAaP,GAAO,CAET,OADAL,EAAGa,aAAaR,KAE1BG,EAAgBH,GAAQL,EAAGa,aAAaR,IAE5CL,EAAGc,gBAAgBT,EACvB,KAEGG,CACX,C,0ECdA,MAAMO,EAA2BC,IAC7BA,EAAWC,WAAWN,SAASO,IAC3B,GAAIA,EAAKC,WAAaC,KAAKC,aAAc,CACrC,MAAMC,EAAUJ,EACsB,OAAlCI,EAAQC,QAAQC,eAA2D,aAAjCF,EAAQT,aAAa,SAC/DS,EAAQG,aAAa,OAAQ,WAErC,IACF,EAMAC,EAAY,MACdC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GAQvBE,KAAKC,SAAW,IAAIC,kBAPFC,IACdA,EAActB,SAASuB,IACG,cAAlBA,EAASC,MACTpB,EAAwBmB,EAASE,OACrC,GACF,GAGV,CACAC,gBAAAA,GACI,MACMC,EADcR,KAAKS,KACMC,cAAc,8BAC7CV,KAAKC,SAASU,QAAQH,EAAY,CAC9BI,WAAW,EACXC,SAAS,IAEb5B,EAAwBuB,EAC5B,CACAM,oBAAAA,GACId,KAAKC,SAASc,YAClB,CACAC,MAAAA,GACI,MAAMC,EAAgBC,OAAOC,OAAO,CAAC,GAAGlD,EAAAA,EAAAA,GAAsB+B,KAAKS,OACnE,OAAQW,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,6CAA8CF,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,2CAA4CC,KAAM,eAAgBH,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,2CAA4CC,KAAM,WAAYH,EAAAA,EAAAA,GAAE,MAAOF,OAAOC,OAAO,CAAEG,IAAK,4CAA8CL,IAAgBG,EAAAA,EAAAA,GAAE,KAAM,CAAEE,IAAK,2CAA4CE,MAAO,8BAA+BJ,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,8CAA+CF,EAAAA,EAAAA,GAAE,KAAM,CAAEE,IAAK,2CAA4CE,MAAO,8BAA+BJ,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,2CAA4CC,KAAM,UAC5oB,CACA,QAAId,GAAS,OAAOgB,EAAAA,EAAAA,GAAWzB,KAAO,GAE1CJ,EAAU8B,MAjCQ,0hC","sources":["../node_modules/@scania/tegel/dist/esm/inheritAriaAttributes-04f2f252.js","../node_modules/@scania/tegel/dist/esm/inheritAttributes-d21e267b.js","../node_modules/@scania/tegel/dist/esm/tds-header.entry.js"],"sourcesContent":["import { i as inheritAttributes } from './inheritAttributes-d21e267b.js';\n\n/**\n * List of available ARIA attributes + `role`.\n * Removed deprecated attributes.\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\n */\nconst ariaAttributes = [\n    'role',\n    'aria-activedescendant',\n    'aria-atomic',\n    'aria-autocomplete',\n    'aria-braillelabel',\n    'aria-brailleroledescription',\n    'aria-busy',\n    'aria-checked',\n    'aria-colcount',\n    'aria-colindex',\n    'aria-colindextext',\n    'aria-colspan',\n    'aria-controls',\n    'aria-current',\n    'aria-describedby',\n    'aria-description',\n    'aria-details',\n    'aria-disabled',\n    'aria-errormessage',\n    'aria-expanded',\n    'aria-flowto',\n    'aria-haspopup',\n    'aria-hidden',\n    'aria-invalid',\n    'aria-keyshortcuts',\n    'aria-label',\n    'aria-labelledby',\n    'aria-level',\n    'aria-live',\n    'aria-multiline',\n    'aria-multiselectable',\n    'aria-orientation',\n    'aria-owns',\n    'aria-placeholder',\n    'aria-posinset',\n    'aria-pressed',\n    'aria-readonly',\n    'aria-relevant',\n    'aria-required',\n    'aria-roledescription',\n    'aria-rowcount',\n    'aria-rowindex',\n    'aria-rowindextext',\n    'aria-rowspan',\n    'aria-selected',\n    'aria-setsize',\n    'aria-sort',\n    'aria-valuemax',\n    'aria-valuemin',\n    'aria-valuenow',\n    'aria-valuetext',\n];\n/**\n * Returns an array of aria attributes that should be copied from\n * the shadow host element to a target within the light DOM.\n * @param el The element that the attributes should be copied from.\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\n */\nconst inheritAriaAttributes = (el, ignoreList) => {\n    let attributesToInherit = ariaAttributes;\n    if (ignoreList && ignoreList.length > 0) {\n        attributesToInherit = attributesToInherit.filter((attr) => !ignoreList.includes(attr));\n    }\n    return inheritAttributes(el, attributesToInherit);\n};\n\nexport { inheritAriaAttributes as i };\n","/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n    const attributeObject = {};\n    attributes.forEach((attr) => {\n        if (el.hasAttribute(attr)) {\n            const value = el.getAttribute(attr);\n            if (value !== null) {\n                attributeObject[attr] = el.getAttribute(attr);\n            }\n            el.removeAttribute(attr);\n        }\n    });\n    return attributeObject;\n};\n\nexport { inheritAttributes as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { i as inheritAriaAttributes } from './inheritAriaAttributes-04f2f252.js';\nimport './inheritAttributes-d21e267b.js';\n\n/**\n * Loop through the children and add the 'listitem' role if needed.\n * @param {Node} targetNode The node being updated.\n * */\nconst updateListChildrenRoles = (targetNode) => {\n    targetNode.childNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const element = node;\n            if (element.tagName.toLowerCase() !== 'li' && element.getAttribute('role') !== 'listitem') {\n                element.setAttribute('role', 'listitem');\n            }\n        }\n    });\n};\n\nconst headerCss = \"html,:root{--tds-nav-dropdown-menu-box:0 3px 3px rgb(0 0 0 / 15%), 0 -1px 1px rgb(0 0 0 / 1%);--tds-nav-dropdown-item-border-radius:0 0 4px 4px;--tds-font-family-headline:\\\"Scania Sans Headline\\\", arial, helvetica, sans-serif}tds-header{display:block;height:var(--tds-header-height);background-color:var(--tds-header-background);width:100%;z-index:300}nav{box-sizing:border-box;background-color:var(--tds-header-background);width:100%;display:block}nav *{box-sizing:border-box}nav .tds-header-component-list{height:var(--tds-header-height);all:unset;display:flex;justify-content:start;align-items:center}nav tds-header-dropdown,nav tds-header-item{display:none}nav .tds-header-middle-spacer{all:unset;display:block;flex-grow:1;height:var(--tds-header-height);border-right:1px solid var(--tds-header--basic-element-border)}@media screen and (min-width: 992px){nav tds-header-dropdown,nav tds-header-item{display:block}}nav tds-header-item:nth-child(3),nav tds-header-dropdown:nth-child(3){border-left:1px solid var(--tds-header--basic-element-border)}\";\nconst TdsHeaderStyle0 = headerCss;\n\nconst TdsHeader = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        const callback = (mutationsList) => {\n            mutationsList.forEach((mutation) => {\n                if (mutation.type === 'childList') {\n                    updateListChildrenRoles(mutation.target);\n                }\n            });\n        };\n        this.observer = new MutationObserver(callback);\n    }\n    componentDidLoad() {\n        const hostElement = this.host;\n        const navElement = hostElement.querySelector('.tds-header-component-list');\n        this.observer.observe(navElement, {\n            childList: true,\n            subtree: false,\n        });\n        updateListChildrenRoles(navElement);\n    }\n    disconnectedCallback() {\n        this.observer.disconnect();\n    }\n    render() {\n        const navAttributes = Object.assign({}, inheritAriaAttributes(this.host));\n        return (h(Host, { key: '8b4ced851110fc80769c0f37a98ee535f0bd31aa' }, h(\"slot\", { key: '0fe95789efe24c95ff6a6b19924a33f8e280592b', name: \"hamburger\" }), h(\"slot\", { key: 'c1cf6ddd168f52d19e11042fd43de832866826da', name: \"title\" }), h(\"nav\", Object.assign({ key: 'fbb164db5b72ed35ca0c4a15646a3d37d6d5d54a' }, navAttributes), h(\"ul\", { key: 'bb4d59b4754288095953725eb73adf22de7c776b', class: \"tds-header-component-list\" }, h(\"slot\", { key: 'dd43bbc568e5df6071688e58b8c8a5e7eef760c1' }), h(\"li\", { key: '5322eb3701496c7bcc94728b8828f1b24c6605eb', class: \"tds-header-middle-spacer\" }), h(\"slot\", { key: '5d1dda51df772dcaa8485fff152764aced3255bb', name: \"end\" })))));\n    }\n    get host() { return getElement(this); }\n};\nTdsHeader.style = TdsHeaderStyle0;\n\nexport { TdsHeader as tds_header };\n"],"names":["ariaAttributes","inheritAriaAttributes","el","ignoreList","attributesToInherit","length","filter","attr","includes","inheritAttributes","attributeObject","arguments","undefined","forEach","hasAttribute","getAttribute","removeAttribute","updateListChildrenRoles","targetNode","childNodes","node","nodeType","Node","ELEMENT_NODE","element","tagName","toLowerCase","setAttribute","TdsHeader","constructor","hostRef","registerInstance","this","observer","MutationObserver","mutationsList","mutation","type","target","componentDidLoad","navElement","host","querySelector","observe","childList","subtree","disconnectedCallback","disconnect","render","navAttributes","Object","assign","h","Host","key","name","class","getElement","style"],"sourceRoot":""}