{"version":3,"file":"static/js/9230.fc78151a.chunk.js","mappings":"mLAEA,MAGMA,EAAqB,CAAC,cAAe,kBACrCC,EAAe,MACjBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,oBAAsB,KACvB,MAAMC,EAAeF,KAAKG,KAAKC,uBAAuB,kBAAkBC,OAClEC,EAAuBN,KAAKG,KAAKC,uBAAuB,4BAA4BC,OAC1FL,KAAKO,mBAAqBL,IAAiBI,CAAoB,EAEnEN,KAAKQ,aAAc,EACnBR,KAAKS,2BAA4B,EACjCT,KAAKU,gBAAiB,EACtBV,KAAKW,iBAAmB,GACxBX,KAAKY,0BAAuBC,EAC5Bb,KAAKO,oBAAqB,EAC1BP,KAAKc,cAAgB,EACrBd,KAAKe,QAAU,EACnB,CACAC,6BAAAA,CAA8BC,GACtBjB,KAAKe,UAAYE,EAAMC,OAAOH,SAC9BE,EAAMC,OAAOC,QACRC,QAAQC,GAAgB1B,EAAmB2B,SAASD,KACpDE,SAASF,IACV,GAAiC,qBAAtBrB,KAAKqB,GACZ,MAAM,IAAIG,MAAM,gCAADC,OAAiCJ,IAEpDrB,KAAKqB,GAAeJ,EAAMC,OAAOG,EAAY,GAGzD,CAEAK,oBAAAA,GACI1B,KAAKC,qBACT,CACA0B,iBAAAA,GACI3B,KAAK4B,QAAU5B,KAAKG,KAAK0B,QAAQ,aACjC7B,KAAKe,QAAUf,KAAK4B,QAAQb,OAChC,CACAe,iBAAAA,GACInC,EAAmB4B,SAASQ,IACxB/B,KAAK+B,GAAiB/B,KAAK4B,QAAQG,EAAc,GAEzD,CACAC,mBAAAA,GACI,MAAMC,EAAkBjC,KAAKG,KAAK+B,cAAcC,cAAc,oBAAoBC,SAAS/B,OAEvFL,KAAKQ,aAAeR,KAAKU,eACzBV,KAAKc,cAAgBmB,EAAkB,EAGvCjC,KAAKc,cAAgBmB,CAE7B,CACAI,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,2CAA4C,qBAAsBxC,KAAKY,uBAAwB0B,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,6CAC3I,CACA,QAAIrC,GAAS,OAAOsC,EAAAA,EAAAA,GAAWzC,KAAO,GAE1CJ,EAAa8C,MA7DQ,+c","sources":["../node_modules/@scania/tegel/dist/esm/tds-table-body.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\n\nconst tableBodyCss = \":host,tds-table-body{box-sizing:border-box;display:table-row-group}:host *,tds-table-body *{box-sizing:border-box}:host .tds-table__info-message,tds-table-body .tds-table__info-message{font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);display:table-cell;box-sizing:border-box;color:var(--tds-table-color);padding:var(--tds-spacing-element-16);min-width:192px;vertical-align:top;background-color:transparent;transition:background-color 200ms ease}\";\nconst TdsTableBodyStyle0 = tableBodyCss;\n\nconst relevantTableProps = ['multiselect', 'expandableRows'];\nconst TdsTableBody = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.bodyCheckBoxClicked = () => {\n            const numberOfRows = this.host.getElementsByClassName('tds-table__row').length;\n            const numberOfRowsSelected = this.host.getElementsByClassName('tds-table__row--selected').length;\n            this.mainCheckboxStatus = numberOfRows === numberOfRowsSelected;\n        };\n        this.multiselect = false;\n        this.enablePaginationTableBody = false;\n        this.expandableRows = false;\n        this.multiselectArray = [];\n        this.multiselectArrayJSON = undefined;\n        this.mainCheckboxStatus = false;\n        this.columnsNumber = 0;\n        this.tableId = '';\n    }\n    internalTdsPropChangeListener(event) {\n        if (this.tableId === event.detail.tableId) {\n            event.detail.changed\n                .filter((changedProp) => relevantTableProps.includes(changedProp))\n                .forEach((changedProp) => {\n                if (typeof this[changedProp] === 'undefined') {\n                    throw new Error(`Table prop is not supported: ${changedProp}`);\n                }\n                this[changedProp] = event.detail[changedProp];\n            });\n        }\n    }\n    // No need to read the value, event is here just to trigger another function\n    bodyCheckboxListener() {\n        this.bodyCheckBoxClicked();\n    }\n    connectedCallback() {\n        this.tableEl = this.host.closest('tds-table');\n        this.tableId = this.tableEl.tableId;\n    }\n    componentWillLoad() {\n        relevantTableProps.forEach((tablePropName) => {\n            this[tablePropName] = this.tableEl[tablePropName];\n        });\n    }\n    componentWillRender() {\n        const headerColumnsNo = this.host.parentElement.querySelector('tds-table-header').children.length;\n        // multiselect and expended features requires one extra column for controls...\n        if (this.multiselect || this.expandableRows) {\n            this.columnsNumber = headerColumnsNo + 1;\n        }\n        else {\n            this.columnsNumber = headerColumnsNo;\n        }\n    }\n    render() {\n        return (h(Host, { key: '1b8be2776860786f9a3f82f05bbdfc0205fcc5d1', \"data-selected-rows\": this.multiselectArrayJSON }, h(\"slot\", { key: '6ec26061a4861faec740d2ae2b706d533dabfa3f' })));\n    }\n    get host() { return getElement(this); }\n};\nTdsTableBody.style = TdsTableBodyStyle0;\n\nexport { TdsTableBody as tds_table_body };\n"],"names":["relevantTableProps","TdsTableBody","constructor","hostRef","registerInstance","this","bodyCheckBoxClicked","numberOfRows","host","getElementsByClassName","length","numberOfRowsSelected","mainCheckboxStatus","multiselect","enablePaginationTableBody","expandableRows","multiselectArray","multiselectArrayJSON","undefined","columnsNumber","tableId","internalTdsPropChangeListener","event","detail","changed","filter","changedProp","includes","forEach","Error","concat","bodyCheckboxListener","connectedCallback","tableEl","closest","componentWillLoad","tablePropName","componentWillRender","headerColumnsNo","parentElement","querySelector","children","render","h","Host","key","getElement","style"],"sourceRoot":""}