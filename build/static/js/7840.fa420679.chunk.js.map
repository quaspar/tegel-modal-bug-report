{"version":3,"file":"static/js/7840.fa420679.chunk.js","mappings":"gIAaA,SAASA,IACL,MAAMC,EAAM,IAAIC,KACVC,EAAwC,IAAnBF,EAAIG,aAA0C,IAAnBH,EAAII,aAAsBJ,EAAIK,kBAC9EC,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BC,EAAaH,KAAKC,MAAsB,IAAhBD,KAAKE,UAKnC,OAHqBH,EAAWK,SAAS,IAAIC,UAAU,GACnDV,EAAmBS,SAAS,IAC5BD,EAAWC,SAAS,IAAIC,UAAU,EAE1C,C,mGCpBA,MAGMC,EAAoB,MACtBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,MAAOnB,EAAAA,EAAAA,KACZkB,KAAKE,uBAA0BC,IAC3B,MAAMC,EAAcD,EAAME,OAAOC,QAAQC,cACrC,CAAC,IAAK,UAAUC,SAASJ,KACzBJ,KAAKS,MAAO,EAChB,EAEJT,KAAKU,WAAQC,EACbX,KAAKY,gBAAiB,EACtBZ,KAAKa,UAAW,EAChBb,KAAKS,MAAO,EACZT,KAAKc,cAAWH,CACpB,CACAI,UAAAA,CAAWZ,IAEiBA,EAAMa,eAAeR,SAASR,KAAKiB,QAEvDjB,KAAKS,MAAO,EAEpB,CACAS,cAAAA,GACIlB,KAAKS,MAAQT,KAAKS,IACtB,CACAU,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,6CAA8CF,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CC,MAAO,CAChI,aAAcvB,KAAKS,QAClBW,EAAAA,EAAAA,GAAE,kBAAmB,CAAEE,IAAK,2CAA4CC,MAAO,SAAUC,OAAQxB,KAAKS,KAAMI,SAAUb,KAAKa,WAAYO,EAAAA,EAAAA,GAAE,SAAU,CAAEE,IAAK,2CAA4CG,IAAMC,IAC7M1B,KAAKc,SAAWY,CAAE,EACnB,gBAAiB,GAAFC,OAAK3B,KAAKS,MAAQ,gBAAiB,YAAFkB,OAAc3B,KAAKC,MAAQ,eAAgBD,KAAKa,SAAW,WAAa,QAASe,QAASA,KACzI5B,KAAKkB,gBAAgB,IACpBE,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,2CAA4CO,KAAM,SAAW7B,KAAKU,OAAOU,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,2CAA4CO,KAAM,WAAa7B,KAAKY,iBAAmBQ,EAAAA,EAAAA,GAAE,WAAY,CAAEG,MAAO,gBAAiBM,KAAM,eAAgBC,KAAM,WAAc9B,KAAKc,WAAaM,EAAAA,EAAAA,GAAE,qBAAsB,CAAEW,GAAI,gBAAFJ,OAAkB3B,KAAKC,MAAQsB,MAAO,OAAQS,YAAahC,KAAKc,SAAUmB,UAAW,eAAgBC,KAAMlC,KAAKS,KAAM0B,eAAgB,EAAGC,UAAW,CACvd,CACIP,KAAM,OACNQ,QAAS,CACLC,mBAAoB,OAG3BtC,KAAKS,MAAQW,EAAAA,EAAAA,GAAE,OAAQ,CAAEQ,QAAUW,GAAMvC,KAAKE,uBAAuBqC,GAAIC,UAAYD,GAAgB,UAAVA,EAAEjB,KAAmBtB,KAAKE,uBAAuBqC,KAAMnB,EAAAA,EAAAA,GAAE,OAAQ,OAAU,OACnL,CACA,QAAIH,GAAS,OAAOwB,EAAAA,EAAAA,GAAWzC,KAAO,GAE1CJ,EAAkB8C,MA/CQ,8nB","sources":["../node_modules/@scania/tegel/dist/esm/generateUniqueId-7934d315.js","../node_modules/@scania/tegel/dist/esm/tds-header-dropdown.entry.js"],"sourcesContent":["/**\n * Generates a reasonably unique string ID based on current time (minutes, seconds, milliseconds) and random numbers.\n *\n * This function combines the current time and random numbers to generate\n * a unique string ID. The function assumes that it won't be called frequently\n * enough to generate two identical IDs within a millisecond, or that the random\n * number generator will produce the same value twice in quick succession.\n *\n * Note: The IDs generated by this function are not globally unique and their length may vary.\n * For truly unique and fixed-length IDs, consider using a more robust method such as UUID.\n *\n * @returns {string} A unique string ID.\n */\nfunction generateUniqueId() {\n    const now = new Date();\n    const timeInMilliseconds = now.getMinutes() * 60000 + now.getSeconds() * 1000 + now.getMilliseconds(); // Get current time in milliseconds from the start of the hour\n    const randomNum1 = Math.floor(Math.random() * 1000000); // Random number between 0 and 999999\n    const randomNum2 = Math.floor(Math.random() * 1000000); // Another random number\n    // Convert to base 36 (using numbers and letters) and remove '0.' from the random number\n    const uniqueString = randomNum1.toString(36).substring(2) +\n        timeInMilliseconds.toString(36) +\n        randomNum2.toString(36).substring(2);\n    return uniqueString;\n}\n\nexport { generateUniqueId as g };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { g as generateUniqueId } from './generateUniqueId-7934d315.js';\n\nconst headerDropdownCss = \":host{height:var(--tds-header-height);position:relative}:host .menu{flex-direction:column;overflow-y:auto;max-height:calc(100vh - var(--tds-header-height));box-shadow:var(--tds-nav-dropdown-menu-box);background-color:var(--tds-header-app-launcher-menu-background);border-top-right-radius:0;border-top-left-radius:0}:host .menu::-webkit-scrollbar{width:4px;background-color:inherit}:host .menu::-webkit-scrollbar-thumb{background-color:var(--tds-grey-300)}:host .menu ::-webkit-scrollbar-button{height:0;width:0}:host .state-open .dropdown-icon{transform:rotatetds-z-index(180deg)}:host .state-open .button{position:relative;z-index:901}\";\nconst TdsHeaderDropdownStyle0 = headerDropdownCss;\n\nconst TdsHeaderDropdown = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.uuid = generateUniqueId();\n        this.handleSlottedItemClick = (event) => {\n            const eventSource = event.target.tagName.toLowerCase();\n            if (['a', 'button'].includes(eventSource)) {\n                this.open = false;\n            }\n        };\n        this.label = undefined;\n        this.noDropdownIcon = false;\n        this.selected = false;\n        this.open = false;\n        this.buttonEl = undefined;\n    }\n    onAnyClick(event) {\n        // Source: https://lamplightdev.com/blog/2021/04/10/how-to-detect-clicks-outside-of-a-web-component/\n        const isClickOutside = !event.composedPath().includes(this.host);\n        if (isClickOutside) {\n            this.open = false;\n        }\n    }\n    toggleDropdown() {\n        this.open = !this.open;\n    }\n    render() {\n        return (h(Host, { key: 'd72add7a12c105e83c0300dc4c6727775dfe10e5' }, h(\"div\", { key: 'b323560bd8b13b6643eafca2ad9deb9bea53689e', class: {\n                'state-open': this.open,\n            } }, h(\"tds-header-item\", { key: '48af537f7b05f31fcbcb0c0aae311d2ccd69819d', class: \"button\", active: this.open, selected: this.selected }, h(\"button\", { key: '324b1965706b0a3413c9e8ddcc37345c387519cc', ref: (el) => {\n                this.buttonEl = el;\n            }, \"aria-expanded\": `${this.open}`, \"aria-controls\": `launcher-${this.uuid}`, \"aria-current\": this.selected ? 'location' : 'false', onClick: () => {\n                this.toggleDropdown();\n            } }, h(\"slot\", { key: '56a3064075c135677f59e58c4be831c66230a7c2', name: \"icon\" }), this.label, h(\"slot\", { key: '729e1901342405daf3655dac940310e64e6683f0', name: \"label\" }), !this.noDropdownIcon && (h(\"tds-icon\", { class: \"dropdown-icon\", name: \"chevron_down\", size: \"16px\" })))), this.buttonEl && (h(\"tds-popover-canvas\", { id: `tds-dropdown-${this.uuid}`, class: \"menu\", referenceEl: this.buttonEl, placement: \"bottom-start\", show: this.open, offsetDistance: 0, modifiers: [\n                {\n                    name: 'flip',\n                    options: {\n                        fallbackPlacements: [],\n                    },\n                },\n            ] }, this.open ? (h(\"span\", { onClick: (e) => this.handleSlottedItemClick(e), onKeyDown: (e) => e.key === 'Enter' && this.handleSlottedItemClick(e) }, h(\"slot\", null))) : null)))));\n    }\n    get host() { return getElement(this); }\n};\nTdsHeaderDropdown.style = TdsHeaderDropdownStyle0;\n\nexport { TdsHeaderDropdown as tds_header_dropdown };\n"],"names":["generateUniqueId","now","Date","timeInMilliseconds","getMinutes","getSeconds","getMilliseconds","randomNum1","Math","floor","random","randomNum2","toString","substring","TdsHeaderDropdown","constructor","hostRef","registerInstance","this","uuid","handleSlottedItemClick","event","eventSource","target","tagName","toLowerCase","includes","open","label","undefined","noDropdownIcon","selected","buttonEl","onAnyClick","composedPath","host","toggleDropdown","render","h","Host","key","class","active","ref","el","concat","onClick","name","size","id","referenceEl","placement","show","offsetDistance","modifiers","options","fallbackPlacements","e","onKeyDown","getElement","style"],"sourceRoot":""}