{"version":3,"file":"static/js/6520.33b5064d.chunk.js","mappings":"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","sources":["../node_modules/@scania/tegel/dist/esm/tds-dropdown.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-529974bd.js';\n\n/**\n * Find the next focusable element index in a list of focusable elements.\n * @param items List of focusable elements, element with a attribute of disabled that is true will be skipped over.\n * @param nextItemIndex The index in the list to start the search on.\n */\nconst findNextFocusableElement = (items, nextItemIndex) => {\n    if (items[nextItemIndex] === undefined) {\n        return 0;\n    }\n    for (let index = nextItemIndex; index < items.length; index++) {\n        if (!items[index].disabled) {\n            return index;\n        }\n    }\n};\n\n/**\n * Find the previous focusable element index in a list of focusable elements.\n *\n * @param items List of focusable elements, element with a attribute of disabled that is true will be skipped over.\n * @param nextItemIndex The index in the list to start the search on.\n */\nconst findPreviousFocusableElement = (items, previousItemIndex) => {\n    if (items[previousItemIndex] === undefined) {\n        return items.length - 1;\n    }\n    for (let index = previousItemIndex; index >= 0; index--) {\n        if (!items[index].disabled) {\n            return index;\n        }\n    }\n};\n\n/** reference: https://github.com/ionic-team/ionic-framework/blob/main/core/src/utils/helpers.ts#L346\n *\n * Appends a hidden input element to allow the component\n * work within and get picked up by a <form>.\n * @param element The element on which the input with be appended.\n * @param name Name of the input.\n * @param value The value of the input.\n * @param disabled Disables the input if true.\n * @param additionalAttributes Additional attributes that should be passed to the input.\n */\nconst appendHiddenInput = (element, name, value, disabled, additionalAttributes) => {\n    let input = element.querySelector('input');\n    if (!element.querySelector('input')) {\n        input = element.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        if (additionalAttributes) {\n            additionalAttributes.forEach((attr) => input.setAttribute(attr.key, attr.value));\n        }\n        element.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n};\n\nconst dropdownCss = \"@charset \\\"UTF-8\\\";:host button{all:unset;height:100%;width:100%;background-color:var(--tds-dropdown-bg);border-bottom:1px solid var(--tds-dropdown-border-bottom);border-radius:4px 4px 0 0}:host button:hover{border-bottom:1px solid var(--tds-dropdown-border-bottom-hover)}:host button .value-wrapper{padding:0 16px;display:flex;align-items:center;justify-content:space-between}:host button.placeholder{color:var(--tds-dropdown-placeholder-color);line-height:1.3}:host button.value{color:var(--tds-dropdown-value-color);font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);line-height:1.3}:host button:focus{border-bottom-color:var(--tds-dropdown-border-bottom-open)}:host button:focus::before{content:\\\"\\\";position:absolute;bottom:0;left:0;width:100%;height:1px;background:var(--tds-dropdown-border-bottom-open)}:host button.error{border-bottom:1px solid var(--tds-negative)}:host button.error:focus{border-bottom-color:transparent}:host button.error:focus::before{content:\\\"\\\";position:absolute;bottom:0;left:0;width:100%;height:2px;background:var(--tds-negative)}:host button:disabled{color:var(--tds-dropdown-disabled-color);border-bottom:1px solid transparent}:host button .menu-icon{margin-right:0px}:host .filter{display:flex;align-items:center;justify-content:space-between;height:100%;background-color:var(--tds-dropdown-bg);border-bottom:1px solid var(--tds-dropdown-border-bottom);padding-left:16px;border-radius:4px 4px 0 0}:host .filter:hover{border-bottom:1px solid var(--tds-dropdown-border-bottom-hover)}:host .filter.disabled{color:var(--tds-dropdown-disabled-color);border-bottom:1px solid transparent}:host .filter .value-wrapper{display:flex;width:100%;height:100%}:host .filter .label-inside-as-placeholder{position:absolute;font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);line-height:1.3;color:var(--tds-dropdown-placeholder-color)}:host .filter .label-inside-as-placeholder.lg{top:20px}:host .filter .label-inside-as-placeholder.md{top:16px}:host .filter .label-inside-as-placeholder.sm{display:none}:host .filter .label-inside-as-placeholder.selected{font:var(--tds-detail-07);letter-spacing:var(--tds-detail-07-ls);transition:all 0.2s ease-in-out}:host .filter .label-inside-as-placeholder.selected.lg{top:12px}:host .filter .label-inside-as-placeholder.selected.md{top:8px}:host .filter .label-inside-as-placeholder.selected.sm{display:none}:host .filter .label-inside-as-placeholder.selected+.placeholder:not(.sm){margin-top:8px}:host .filter.focus{border-bottom-color:transparent}:host .filter.focus::before{content:\\\"\\\";position:absolute;bottom:0;left:0;width:100%;height:2px;background:var(--tds-dropdown-border-bottom-open)}:host .filter.error{border-bottom:1px solid var(--tds-negative)}:host .filter.error.focus{border-bottom-color:transparent}:host .filter.error.focus::before{content:\\\"\\\";position:absolute;bottom:0;left:0;width:100%;height:2px;background:var(--tds-negative)}:host .filter input{flex:1;all:unset;width:100%}:host .filter input::placeholder{color:var(--tds-dropdown-placeholder-color)}:host .filter input:disabled::placeholder{color:var(--tds-dropdown-disabled-color)}:host .filter tds-icon{cursor:pointer}:host .filter .menu-icon{margin-right:16px}:host .filter .clear-icon{margin:0 8px;color:var(--tds-dropdown-clear-icon-color);padding-right:8px;border-right:1px solid var(--tds-dropdown-clear-icon-color)}:host .filter .clear-icon:hover{color:var(--tds-dropdown-clear-icon-hover-color)}:host .filter .clear-icon.hide{display:none;visibility:hidden}:host{display:block;position:relative;font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls)}:host .label-outside{font:var(--tds-detail-05);letter-spacing:var(--tds-detail-05-ls);color:var(--tds-dropdown-label-color);margin-bottom:8px}:host .label-outside.disabled{color:var(--tds-dropdown-disabled-color)}:host .dropdown-select{position:relative}:host .dropdown-select.disabled .label-inside,:host .dropdown-select.disabled .placeholder,:host .dropdown-select.disabled .label-inside-as-placeholder,:host .dropdown-select.disabled .value-wrapper{color:var(--tds-dropdown-disabled-color)}:host .dropdown-select .label-inside{position:absolute;font:var(--tds-detail-07);letter-spacing:var(--tds-detail-07-ls);color:var(--tds-dropdown-label-inside-color)}:host .dropdown-select .label-inside.lg{top:12px;left:16px}:host .dropdown-select .label-inside.md{top:8px;left:16px}:host .dropdown-select .label-inside.sm{display:none}:host .dropdown-select .label-inside+.placeholder:not(.sm){margin-top:8px}:host .dropdown-select .placeholder{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .dropdown-select .label-inside-as-placeholder{color:var(--tds-dropdown-placeholder-color)}:host .dropdown-select .label-inside-as-placeholder.selected{position:absolute;font:var(--tds-detail-07);letter-spacing:var(--tds-detail-07-ls);transition:all 0.2s ease-in-out}:host .dropdown-select .label-inside-as-placeholder.selected.lg{top:12px}:host .dropdown-select .label-inside-as-placeholder.selected.md{top:8px}:host .dropdown-select .label-inside-as-placeholder.selected.sm{display:none}:host .dropdown-select .label-inside-as-placeholder.selected+.placeholder:not(.sm){margin-top:8px}:host .dropdown-select.lg{height:55px}:host .dropdown-select.md{height:47px}:host .dropdown-select.sm{height:39px}:host .helper{margin-top:4px;color:var(--tds-dropdown-helper-color);font:var(--tds-detail-05);letter-spacing:var(--tds-detail-05-ls);display:flex;align-items:center;gap:8px}:host .helper.error{color:var(--tds-negative)}:host .helper.disabled{color:var(--tds-dropdown-disabled-color)}:host .dropdown-list{z-index:100;position:absolute;margin-top:1px;width:100%;transform-origin:top;transition:transform 0.2s ease-in-out;box-shadow:rgba(0, 0, 0, 0.1) 0 2px 3px 0;border-radius:0 0 4px 4px;overflow-y:auto}:host .dropdown-list::-webkit-scrollbar{width:4px;background-color:inherit}:host .dropdown-list::-webkit-scrollbar-thumb{background-color:var(--tds-grey-300)}:host .dropdown-list ::-webkit-scrollbar-button{height:0;width:0}:host .dropdown-list.lg{max-height:312px}:host .dropdown-list.md{max-height:312px}:host .dropdown-list.sm{max-height:260px}:host .dropdown-list.up{bottom:100%;margin-top:0;margin-bottom:1px;transform-origin:bottom;display:flex;flex-direction:column-reverse;box-shadow:rgba(0, 0, 0, 0.1) 0 -1px 3px 0;border-radius:4px 4px 0 0}:host .dropdown-list.up.label-outside{bottom:calc(100% - 24px)}:host .dropdown-list.closed{transform:scaleY(0);visibility:hidden}:host .dropdown-list.open{transform:scaleY(1)}:host .dropdown-list .no-result{font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);display:flex;align-items:center;padding:0 16px;background-color:var(--tds-dropdown-bg)}:host .dropdown-list .no-result.lg{height:56px}:host .dropdown-list .no-result.md{height:48px}:host .dropdown-list .no-result.sm{height:40px}:host .menu-icon{color:var(--tds-dropdown-menu-icon-color)}:host tds-icon{transition:transform 0.2s ease-in-out}:host tds-icon.open{transform:rotateZ(180deg)}\";\nconst TdsDropdownStyle0 = dropdownCss;\n\nconst TdsDropdown = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.tdsChange = createEvent(this, \"tdsChange\", 6);\n        this.tdsFocus = createEvent(this, \"tdsFocus\", 6);\n        this.tdsBlur = createEvent(this, \"tdsBlur\", 6);\n        this.tdsInput = createEvent(this, \"tdsInput\", 6);\n        this.setDefaultOption = () => {\n            // Ensure this.host.children is not empty\n            if (this.host.children.length === 0) {\n                console.warn('TDS DROPDOWN: Data missing. Disregard if loading data asynchronously.');\n                return;\n            }\n            if (this.defaultValue) {\n                const children = Array.from(this.host.children).filter((element) => element.tagName === 'TDS-DROPDOWN-OPTION');\n                let matched = false;\n                children.forEach((element) => {\n                    if (this.multiselect) {\n                        this.defaultValue.split(',').forEach((value) => {\n                            if (value === element.value) {\n                                element.setSelected(true);\n                                this.value = this.value ? [...this.value, element.value] : [element.value];\n                                matched = true;\n                            }\n                        });\n                    }\n                    else {\n                        if (this.defaultValue === element.value) {\n                            element.setSelected(true);\n                            this.value = [element.value];\n                            matched = true;\n                        }\n                        else {\n                            element.setSelected(false);\n                        }\n                    }\n                    this.setValueAttribute();\n                    return element;\n                });\n                if (!matched) {\n                    console.warn(`TDS DROPDOWN: No matching option found for defaultValue \"${this.defaultValue}\"`);\n                }\n            }\n        };\n        /* Returns a list of all children that are tds-dropdown-option elements */\n        this.getChildren = () => {\n            const tdsDropdownOptions = Array.from(this.host.children).filter((element) => element.tagName === 'TDS-DROPDOWN-OPTION');\n            if (tdsDropdownOptions.length === 0) {\n                console.warn('TDS DROPDOWN: Data missing. Disregard if loading data asynchronously.');\n            }\n            else\n                return tdsDropdownOptions;\n        };\n        this.getOpenDirection = () => {\n            var _a, _b, _c, _d, _e;\n            if (this.openDirection === 'auto' || !this.openDirection) {\n                const dropdownMenuHeight = (_b = (_a = this.dropdownList) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0;\n                const distanceToBottom = (_e = (_d = (_c = this.host).getBoundingClientRect) === null || _d === void 0 ? void 0 : _d.call(_c).top) !== null && _e !== void 0 ? _e : 0;\n                const viewportHeight = window.innerHeight;\n                if (distanceToBottom + dropdownMenuHeight + 57 > viewportHeight) {\n                    return 'up';\n                }\n                return 'down';\n            }\n            return this.openDirection;\n        };\n        /* Toggles the open state of the Dropdown and sets focus to the input element */\n        this.handleToggleOpen = () => {\n            if (!this.disabled) {\n                this.open = !this.open;\n                if (this.open) {\n                    this.focusInputElement();\n                }\n            }\n        };\n        /* Focuses the input element in the Dropdown, if the reference is present. */\n        this.focusInputElement = () => {\n            if (this.inputElement)\n                this.inputElement.focus();\n        };\n        this.getSelectedChildren = () => {\n            var _a;\n            return (_a = this.value) === null || _a === void 0 ? void 0 : _a.map((stringValue) => {\n                const matchingElement = this.getChildren().find((element) => element.value === stringValue);\n                return matchingElement;\n            }).filter(Boolean);\n        };\n        this.getSelectedChildrenLabels = () => {\n            var _a;\n            return (_a = this.getSelectedChildren()) === null || _a === void 0 ? void 0 : _a.map((element) => element.textContent.trim());\n        };\n        this.getValue = () => {\n            const labels = this.getSelectedChildrenLabels();\n            if (!labels) {\n                return '';\n            }\n            return this.filter ? labels === null || labels === void 0 ? void 0 : labels.join(', ') : labels === null || labels === void 0 ? void 0 : labels.toString();\n        };\n        this.setValueAttribute = () => {\n            var _a, _b, _c;\n            if (((_a = this.value) === null || _a === void 0 ? void 0 : _a.toString()) === '')\n                this.value = null;\n            this.host.setAttribute('value', (_c = (_b = this.value) === null || _b === void 0 ? void 0 : _b.map((val) => val).toString()) !== null && _c !== void 0 ? _c : null);\n        };\n        this.handleFilter = (event) => {\n            this.tdsInput.emit(event);\n            const query = event.target.value.toLowerCase();\n            /* Check if the query is empty, and if so, show all options */\n            const children = this.getChildren();\n            if (query === '') {\n                children.forEach((element) => {\n                    element.removeAttribute('hidden');\n                    return element;\n                });\n                this.filterResult = null;\n                /* Hide the options that do not match the query */\n            }\n            else {\n                this.filterResult = children.filter((element) => {\n                    if (!this.normalizeString(element.textContent)\n                        .toLowerCase()\n                        .includes(this.normalizeString(query).toLowerCase())) {\n                        element.setAttribute('hidden', '');\n                    }\n                    else {\n                        element.removeAttribute('hidden');\n                    }\n                    return !element.hasAttribute('hidden');\n                }).length;\n            }\n        };\n        this.handleFilterReset = () => {\n            this.reset();\n            this.inputElement.value = '';\n            this.handleFilter({ target: { value: this.inputElement.value } });\n            this.inputElement.focus();\n        };\n        this.handleFocus = (event) => {\n            this.tdsFocus.emit(event);\n        };\n        this.handleBlur = (event) => {\n            this.tdsBlur.emit(event);\n        };\n        this.handleChange = () => {\n            var _a, _b;\n            this.tdsChange.emit({\n                name: this.name,\n                value: (_b = (_a = this.value) === null || _a === void 0 ? void 0 : _a.map((value) => value).toString()) !== null && _b !== void 0 ? _b : null,\n            });\n        };\n        this.name = undefined;\n        this.disabled = false;\n        this.helper = undefined;\n        this.label = undefined;\n        this.labelPosition = undefined;\n        this.modeVariant = null;\n        this.openDirection = 'auto';\n        this.placeholder = undefined;\n        this.size = 'lg';\n        this.error = false;\n        this.multiselect = false;\n        this.filter = false;\n        this.normalizeText = true;\n        this.noResultText = 'No result';\n        this.defaultValue = undefined;\n        this.open = false;\n        this.value = undefined;\n        this.filterResult = undefined;\n        this.filterFocus = undefined;\n    }\n    /** Method that resets the Dropdown, marks all children as non-selected and resets the value to null. */\n    async reset() {\n        this.internalReset();\n        this.handleChange();\n    }\n    /** Method for setting the value of the Dropdown.\n     *\n     * Single selection example:\n     *\n     * <code>\n     *  dropdown.setValue('option-1', 'Option 1');\n     * </code>\n     *\n     * Multiselect example:\n     *\n     * <code>\n     *  dropdown.setValue(['option-1', 'option-2']);\n     * </code>\n     */\n    //  The label is optional here ONLY to not break the API. Should be removed for 2.0.\n    // @ts-ignore\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    async setValue(value, label) {\n        let nextValue;\n        if (typeof value === 'string')\n            nextValue = [value];\n        else\n            nextValue = value;\n        if (!this.multiselect && nextValue.length > 1) {\n            console.warn('Tried to select multiple items, but multiselect is not enabled.');\n            nextValue = [nextValue[0]];\n        }\n        this.internalReset();\n        for (let i = 0; i < nextValue.length; i++) {\n            const optionExist = this.getChildren().some((element) => element.value === nextValue[i]);\n            if (!optionExist) {\n                nextValue.splice(i, 1);\n            }\n        }\n        this.value = nextValue;\n        this.setValueAttribute();\n        this.selectChildrenAsSelectedBasedOnSelectionProp();\n        this.handleChange();\n        /* This returns an array of object with a value and label pair. This is ONLY to not break the API. Should be removed for 2.0. */\n        /* https://tegel.atlassian.net/browse/CDEP-2703 */\n        const selection = this.getSelectedChildren().map((element) => ({\n            value: element.value,\n            label: element.textContent.trim(),\n        }));\n        // Update inputElement value and placeholder text\n        if (this.filter) {\n            this.inputElement.value = this.getValue();\n        }\n        return selection;\n    }\n    /**\n     * @internal\n     */\n    async appendValue(value) {\n        if (this.multiselect && this.value) {\n            this.setValue([...this.value, value]);\n        }\n        else {\n            this.setValue(value);\n        }\n    }\n    /** Method for removing a selected value in the Dropdown. */\n    async removeValue(oldValue) {\n        var _a, _b;\n        let label;\n        if (this.multiselect) {\n            (_a = this.getChildren()) === null || _a === void 0 ? void 0 : _a.forEach((element) => {\n                var _a;\n                if (element.value === oldValue) {\n                    this.value = (_a = this.value) === null || _a === void 0 ? void 0 : _a.filter((value) => value !== element.value);\n                    label = element.textContent.trim();\n                    element.setSelected(false);\n                }\n                return element;\n            });\n        }\n        else {\n            this.reset();\n        }\n        this.handleChange();\n        this.setValueAttribute();\n        /* This returns an array of object with a value and label pair. This is ONLY to not break the API. Should be removed for 2.0. */\n        /* https://tegel.atlassian.net/browse/CDEP-2703 */\n        return (_b = this.value) === null || _b === void 0 ? void 0 : _b.map((value) => ({ value, label }));\n    }\n    /** Method for closing the Dropdown. */\n    async close() {\n        this.open = false;\n    }\n    onAnyClick(event) {\n        if (this.open) {\n            // Source: https://lamplightdev.com/blog/2021/04/10/how-to-detect-clicks-outside-of-a-web-component/\n            const isClickOutside = !event.composedPath().includes(this.host);\n            if (isClickOutside) {\n                this.open = false;\n            }\n        }\n    }\n    async onKeyDown(event) {\n        // Get the active element\n        const { activeElement } = document;\n        if (!activeElement) {\n            return;\n        }\n        const children = this.getChildren();\n        if (event.key === 'ArrowDown') {\n            /* Get the index of the current focus index, if there is no\n            nextElementSibling return the index for the first child in our Dropdown.  */\n            const startingIndex = activeElement.nextElementSibling\n                ? children.findIndex((element) => element === activeElement.nextElementSibling)\n                : 0;\n            const elementIndex = findNextFocusableElement(children, startingIndex);\n            children[elementIndex].focus();\n        }\n        else if (event.key === 'ArrowUp') {\n            /* Get the index of the current focus index, if there is no\n            previousElementSibling return the index for the first last in our Dropdown.  */\n            const startingIndex = activeElement.nextElementSibling\n                ? this.getChildren().findIndex((element) => element === activeElement.previousElementSibling)\n                : 0;\n            const elementIndex = findPreviousFocusableElement(children, startingIndex);\n            children[elementIndex].focus();\n        }\n        else if (event.key === 'Escape') {\n            this.open = false;\n        }\n    }\n    // If the Dropdown gets closed,\n    // this sets the value of the dropdown to the current selection labels or null if no selection is made.\n    handleOpenState() {\n        if (this.filter && this.multiselect) {\n            if (!this.open) {\n                this.inputElement.value = this.getValue();\n            }\n        }\n    }\n    componentWillLoad() {\n        this.setDefaultOption();\n    }\n    /** Method to handle slot changes */\n    handleSlotChange() {\n        this.setDefaultOption();\n    }\n    /** Method to check if we should normalize text */\n    normalizeString(text) {\n        return this.normalizeText ? text.normalize('NFD').replace(/\\p{Diacritic}/gu, '') : text;\n    }\n    /** Method that resets the dropdown without emitting an event. */\n    internalReset() {\n        this.getChildren().forEach((element) => {\n            element.setSelected(false);\n            return element;\n        });\n        this.value = null;\n        this.setValueAttribute();\n    }\n    selectChildrenAsSelectedBasedOnSelectionProp() {\n        this.getChildren().forEach((element) => {\n            this.value.forEach((selection) => {\n                if (element.value !== selection) {\n                    // If not multiselect, we need to unselect all other options.\n                    if (!this.multiselect) {\n                        element.setSelected(false);\n                    }\n                }\n                else {\n                    element.setSelected(true);\n                }\n            });\n        });\n    }\n    render() {\n        var _a, _b, _c, _d;\n        appendHiddenInput(this.host, this.name, (_a = this.value) === null || _a === void 0 ? void 0 : _a.map((value) => value).toString(), this.disabled);\n        return (h(Host, { key: '451edf7c5eaa096500d8d989bd9cddc60a5fd5d8', role: \"select\", class: `${this.modeVariant ? `tds-mode-variant-${this.modeVariant}` : ''}` }, this.label && this.labelPosition === 'outside' && (h(\"div\", { class: `label-outside ${this.disabled ? 'disabled' : ''}` }, this.label)), h(\"div\", { key: 'c7e3d77ba79b6e135aa960bc8e56c2d41ae3ec2e', class: `dropdown-select ${this.size} ${this.disabled ? 'disabled' : ''}` }, this.filter ? (h(\"div\", { class: {\n                filter: true,\n                focus: this.filterFocus,\n                disabled: this.disabled,\n                error: this.error,\n            } }, h(\"div\", { class: \"value-wrapper\" }, this.label && this.labelPosition === 'inside' && this.placeholder && (h(\"div\", { class: `label-inside ${this.size}` }, this.label)), this.label && this.labelPosition === 'inside' && !this.placeholder && (h(\"div\", { class: `\n                    label-inside-as-placeholder\n                    ${this.size}\n                    ${((_b = this.value) === null || _b === void 0 ? void 0 : _b.length) ? 'selected' : ''}\n                    ` }, this.label)), h(\"input\", {\n            // eslint-disable-next-line no-return-assign\n            ref: (inputEl) => (this.inputElement = inputEl), class: `${this.labelPosition === 'inside' ? 'placeholder' : ''}`, type: \"text\", placeholder: this.placeholder, value: this.getValue(), disabled: this.disabled, onInput: (event) => this.handleFilter(event), onBlur: (event) => {\n                this.filterFocus = false;\n                this.handleBlur(event);\n            }, onFocus: (event) => {\n                this.open = true;\n                this.filterFocus = true;\n                this.handleFocus(event);\n            }, onKeyDown: (event) => {\n                if (event.key === 'Escape') {\n                    this.open = false;\n                }\n            }\n        })), h(\"tds-icon\", { tabIndex: 0, role: \"button\", \"aria-label\": \"Clear filter\", svgTitle: \"Clear filter\", onClick: this.handleFilterReset, onKeyDown: (event) => {\n                if (event.key === 'Enter') {\n                    this.handleFilterReset();\n                }\n            }, class: `clear-icon ${this.open && this.inputElement.value !== '' ? '' : 'hide'}`, name: \"cross\", size: \"16px\" }), h(\"tds-icon\", { tabIndex: 0, role: \"button\", \"aria-label\": \"Open/Close dropdown\", svgTitle: \"Open/Close dropdown\", onClick: this.handleToggleOpen, onKeyDown: (event) => {\n                if (event.key === 'Enter') {\n                    this.handleToggleOpen();\n                }\n            }, class: `menu-icon ${this.open ? 'open' : 'closed'}`, name: \"chevron_down\", size: \"16px\" }))) : (h(\"button\", { onClick: () => this.handleToggleOpen(), onKeyDown: (event) => {\n                if (event.key === 'Escape') {\n                    this.open = false;\n                }\n            }, class: `\n                ${this.value ? 'value' : 'placeholder'}\n                ${this.open ? 'open' : 'closed'}\n                ${this.error ? 'error' : ''}\n                `, disabled: this.disabled }, h(\"div\", { class: `value-wrapper ${this.size}` }, this.label && this.labelPosition === 'inside' && this.placeholder && (h(\"div\", { class: `label-inside ${this.size}` }, this.label)), this.label && this.labelPosition === 'inside' && !this.placeholder && (h(\"div\", { class: `\n                    label-inside-as-placeholder\n                    ${this.size}\n                    ${((_c = this.value) === null || _c === void 0 ? void 0 : _c.length) ? 'selected' : ''}\n                    ` }, this.label)), h(\"div\", { class: `placeholder ${this.size}` }, ((_d = this.value) === null || _d === void 0 ? void 0 : _d.length) ? this.getValue() : this.placeholder), h(\"tds-icon\", { \"aria-label\": \"Open/Close dropdown\", svgTitle: \"Open/Close dropdown\", class: `menu-icon ${this.open ? 'open' : 'closed'}`, name: \"chevron_down\", size: \"16px\" }))))), h(\"div\", { key: 'cd63a354addfbcbfb2bb355b1e053b93dd9d3864', ref: (element) => (this.dropdownList = element), class: `dropdown-list\n            ${this.size}\n            ${this.open ? 'open' : 'closed'}\n            ${this.getOpenDirection()}\n            ${this.label && this.labelPosition === 'outside' ? 'label-outside' : ''}` }, h(\"slot\", { key: '9a4feeed475bde225d19e01f17e4eadc292c6f41', onSlotchange: () => this.handleSlotChange() }), this.filterResult === 0 && this.noResultText !== '' && (h(\"div\", { class: `no-result ${this.size}` }, this.noResultText))), this.helper && (h(\"div\", { class: `helper ${this.error ? 'error' : ''} ${this.disabled ? 'disabled' : ''}` }, this.error && h(\"tds-icon\", { name: \"error\", size: \"16px\" }), this.helper))));\n    }\n    get host() { return getElement(this); }\n    static get watchers() { return {\n        \"open\": [\"handleOpenState\"]\n    }; }\n};\nTdsDropdown.style = TdsDropdownStyle0;\n\nexport { TdsDropdown as tds_dropdown };\n"],"names":["TdsDropdown","constructor","hostRef","registerInstance","this","tdsChange","createEvent","tdsFocus","tdsBlur","tdsInput","setDefaultOption","host","children","length","defaultValue","Array","from","filter","element","tagName","matched","forEach","multiselect","split","value","setSelected","setValueAttribute","console","warn","concat","getChildren","tdsDropdownOptions","getOpenDirection","_a","_b","_c","_d","_e","openDirection","dropdownMenuHeight","dropdownList","offsetHeight","getBoundingClientRect","call","top","window","innerHeight","handleToggleOpen","disabled","open","focusInputElement","inputElement","focus","getSelectedChildren","map","stringValue","find","Boolean","getSelectedChildrenLabels","textContent","trim","getValue","labels","join","toString","setAttribute","val","handleFilter","event","emit","query","target","toLowerCase","removeAttribute","filterResult","normalizeString","includes","hasAttribute","handleFilterReset","reset","handleFocus","handleBlur","handleChange","name","undefined","helper","label","labelPosition","modeVariant","placeholder","size","error","normalizeText","noResultText","filterFocus","internalReset","setValue","nextValue","i","some","splice","selectChildrenAsSelectedBasedOnSelectionProp","selection","appendValue","removeValue","oldValue","close","onAnyClick","composedPath","onKeyDown","activeElement","document","key","startingIndex","nextElementSibling","findIndex","findNextFocusableElement","items","nextItemIndex","index","findPreviousFocusableElement","previousItemIndex","previousElementSibling","handleOpenState","componentWillLoad","handleSlotChange","text","normalize","replace","render","appendHiddenInput","additionalAttributes","input","querySelector","ownerDocument","createElement","type","attr","appendChild","h","Host","role","class","ref","inputEl","onInput","onBlur","onFocus","tabIndex","svgTitle","onClick","onSlotchange","getElement","watchers","style"],"sourceRoot":""}