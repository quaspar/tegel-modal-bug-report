{"version":3,"file":"static/js/2571.1c3b9704.chunk.js","mappings":"gIAaA,SAASA,IACL,MAAMC,EAAM,IAAIC,KACVC,EAAwC,IAAnBF,EAAIG,aAA0C,IAAnBH,EAAII,aAAsBJ,EAAIK,kBAC9EC,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BC,EAAaH,KAAKC,MAAsB,IAAhBD,KAAKE,UAKnC,OAHqBH,EAAWK,SAAS,IAAIC,UAAU,GACnDV,EAAmBS,SAAS,IAC5BD,EAAWC,SAAS,IAAIC,UAAU,EAE1C,C,gGCpBA,MAGMC,EAAiB,MACnBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,WAAYC,EAAAA,EAAAA,GAAYF,KAAM,YAAa,GAChDA,KAAKG,aAAe,KAChBH,KAAKC,UAAUG,KAAK,CAChBC,QAASL,KAAKK,QACdC,MAAON,KAAKM,OACd,EAENN,KAAKO,UAAOC,EACZR,KAAKM,WAAQE,EACbR,KAAKK,SAAUvB,EAAAA,EAAAA,KACfkB,KAAKS,SAAU,EACfT,KAAKU,UAAW,EAChBV,KAAKW,UAAW,CACpB,CACAC,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAO,qBAAsBF,EAAAA,EAAAA,GAAE,QAAS,CAAEC,IAAK,2CAA4CC,MAAO,iBAAkBC,KAAM,QAAST,KAAMP,KAAKO,KAAMU,GAAIjB,KAAKK,QAASC,MAAON,KAAKM,MAAOG,QAAST,KAAKS,QAAS,eAAgBT,KAAKS,QAASC,SAAUV,KAAKU,SAAUC,SAAUX,KAAKW,SAAUO,SAAUA,IAAMlB,KAAKG,kBAAmBU,EAAAA,EAAAA,GAAE,QAAS,CAAEC,IAAK,2CAA4CK,QAASnB,KAAKK,UAAWQ,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,IAAK,2CAA4CP,KAAM,WAC1iB,CACA,QAAIa,GAAS,OAAOC,EAAAA,EAAAA,GAAWrB,KAAO,GAE1CJ,EAAe0B,MAzBQ,4+J","sources":["../node_modules/@scania/tegel/dist/esm/generateUniqueId-7934d315.js","../node_modules/@scania/tegel/dist/esm/tds-radio-button.entry.js"],"sourcesContent":["/**\n * Generates a reasonably unique string ID based on current time (minutes, seconds, milliseconds) and random numbers.\n *\n * This function combines the current time and random numbers to generate\n * a unique string ID. The function assumes that it won't be called frequently\n * enough to generate two identical IDs within a millisecond, or that the random\n * number generator will produce the same value twice in quick succession.\n *\n * Note: The IDs generated by this function are not globally unique and their length may vary.\n * For truly unique and fixed-length IDs, consider using a more robust method such as UUID.\n *\n * @returns {string} A unique string ID.\n */\nfunction generateUniqueId() {\n    const now = new Date();\n    const timeInMilliseconds = now.getMinutes() * 60000 + now.getSeconds() * 1000 + now.getMilliseconds(); // Get current time in milliseconds from the start of the hour\n    const randomNum1 = Math.floor(Math.random() * 1000000); // Random number between 0 and 999999\n    const randomNum2 = Math.floor(Math.random() * 1000000); // Another random number\n    // Convert to base 36 (using numbers and letters) and remove '0.' from the random number\n    const uniqueString = randomNum1.toString(36).substring(2) +\n        timeInMilliseconds.toString(36) +\n        randomNum2.toString(36).substring(2);\n    return uniqueString;\n}\n\nexport { generateUniqueId as g };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-529974bd.js';\nimport { g as generateUniqueId } from './generateUniqueId-7934d315.js';\n\nconst radioButtonCss = \".sc-tds-radio-button:root,.tds-mode-light.sc-tds-radio-button{--tds-radio-button-color:var(--tds-grey-958);--tds-radio-button-interaction-01:var(--tds-blue-800);--tds-radio-button-interaction-02:var(--tds-white);--tds-radio-button-background-hover:var(--tds-blue-800);--tds-radio-button-background-focus:var(--tds-blue-800);--tds-radio-button-disabled:var(--tds-grey-600);--tds-radio-button-border-color-disabled-after:var(--tds-grey-500);--tds-radio-button-color-disabled-after:var(--tds-grey-700);--tds-radio-button-color-disabled-before:var(--tds-grey-700)}.tds-mode-dark.sc-tds-radio-button{--tds-radio-button-color:var(--tds-white);--tds-radio-button-interaction-01:var(--tds-white);--tds-radio-button-interaction-02:var(--tds-grey-958);--tds-radio-button-background-hover:var(--tds-white);--tds-radio-button-background-focus:var(--tds-white);--tds-radio-button-disabled:var(--tds-grey-600);--tds-radio-button-border-color-disabled-after:var(--tds-grey-700);--tds-radio-button-color-disabled-after:var(--tds-grey-700)}.tds-radio-button.sc-tds-radio-button{box-sizing:border-box;display:flex;align-items:center;margin-left:-4px;font:var(--tds-detail-02);letter-spacing:var(--tds-detail-02-ls);color:var(--tds-radio-button-color)}.tds-radio-button.sc-tds-radio-button *.sc-tds-radio-button{box-sizing:border-box}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button{appearance:none;outline:none;margin:0;border:0;width:24px;height:24px;border-radius:50%;position:relative;cursor:pointer;flex-shrink:0;align-self:flex-start}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button+label.sc-tds-radio-button{padding:var(--tds-spacing-element-4) 0 var(--tds-spacing-element-4) var(--tds-spacing-element-4);cursor:pointer}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button::before,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button::after{content:\\\"\\\";position:absolute;border-radius:50%;box-sizing:border-box}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button::before{width:24px;height:24px;left:0;top:0}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button::after{border:1px solid var(--tds-radio-button-interaction-01);background-color:var(--tds-radio-button-interaction-02);width:16px;height:16px;left:4px;top:4px}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:hover::before{background-color:var(--tds-radio-button-background-hover);opacity:0.12}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:focus::before{background-color:var(--tds-radio-button-background-focus);opacity:0.24;animation:rb-focus 0.4s cubic-bezier(0.65, 0.05, 0.38, 0.95) forwards}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:disabled,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].disabled.sc-tds-radio-button{cursor:not-allowed}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:disabled::after,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].disabled.sc-tds-radio-button::after{border-color:var(--tds-radio-button-border-color-disabled-after);background-color:var(--tds-radio-button-interaction-02)}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:disabled+label.sc-tds-radio-button,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].disabled.sc-tds-radio-button+label.sc-tds-radio-button{color:var(--tds-radio-button-disabled);cursor:not-allowed}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:disabled:hover::before,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].disabled.sc-tds-radio-button:hover::before{display:none;opacity:1}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked::after{border:4px solid var(--tds-radio-button-interaction-01)}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked:disabled:hover::before,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked:disabled::before,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked.disabled:hover::before,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked.disabled::before{display:block;width:16px;height:16px;left:4px;top:4px;border:1px solid var(--tds-radio-button-color-disabled-before);box-sizing:content-box}.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked:disabled::after,.tds-radio-button.sc-tds-radio-button .tds-form-input[type=radio].sc-tds-radio-button:checked.disabled::after{border:4px solid var(--tds-radio-button-interaction-02);background-color:var(--tds-radio-button-color-disabled-after);left:5px;top:5px}@keyframes rb-focus{0%{transform:scale(0);opacity:0}100%{transform:scale(1);opacity:0.24}}\";\nconst TdsRadioButtonStyle0 = radioButtonCss;\n\nconst TdsRadioButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.tdsChange = createEvent(this, \"tdsChange\", 6);\n        this.handleChange = () => {\n            this.tdsChange.emit({\n                radioId: this.radioId,\n                value: this.value,\n            });\n        };\n        this.name = undefined;\n        this.value = undefined;\n        this.radioId = generateUniqueId();\n        this.checked = false;\n        this.required = false;\n        this.disabled = false;\n    }\n    render() {\n        return (h(\"div\", { key: '94a76d67c971bcc9d5e45cd64ad49f87267ec584', class: \"tds-radio-button\" }, h(\"input\", { key: '73bb8fa6fabede809f55ea63d956efb6f776bd68', class: \"tds-form-input\", type: \"radio\", name: this.name, id: this.radioId, value: this.value, checked: this.checked, \"aria-checked\": this.checked, required: this.required, disabled: this.disabled, onChange: () => this.handleChange() }), h(\"label\", { key: '2bc4fb9747aa4207f0082680b9c2ab720f802844', htmlFor: this.radioId }, h(\"slot\", { key: '0b0c2bb6e2cbd67e307a4bc603dc48a699aa2202', name: \"label\" }))));\n    }\n    get host() { return getElement(this); }\n};\nTdsRadioButton.style = TdsRadioButtonStyle0;\n\nexport { TdsRadioButton as tds_radio_button };\n"],"names":["generateUniqueId","now","Date","timeInMilliseconds","getMinutes","getSeconds","getMilliseconds","randomNum1","Math","floor","random","randomNum2","toString","substring","TdsRadioButton","constructor","hostRef","registerInstance","this","tdsChange","createEvent","handleChange","emit","radioId","value","name","undefined","checked","required","disabled","render","h","key","class","type","id","onChange","htmlFor","host","getElement","style"],"sourceRoot":""}