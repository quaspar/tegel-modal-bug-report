{"version":3,"file":"static/js/6439.b3abf28c.chunk.js","mappings":"uLAEA,MAGMA,EAAqB,CACvB,cACA,mBACA,iBAEEC,EAAkB,MACpBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,WAAYC,EAAAA,EAAAA,GAAYF,KAAM,YAAa,GAChDA,KAAKG,UAAW,EAChBH,KAAKI,UAAW,EAChBJ,KAAKK,aAAc,EACnBL,KAAKM,oBAAqB,EAC1BN,KAAKO,kBAAmB,EACxBP,KAAKQ,eAAgB,EACrBR,KAAKS,YAAa,EAClBT,KAAKU,QAAU,EACnB,CACA,0BAAMC,CAAqBC,GACvBZ,KAAKG,SAAWS,EAAMC,OAAOC,QAC7Bd,KAAKC,UAAUc,KAAK,CAChBL,QAASV,KAAKU,QACdI,QAASd,KAAKG,SACda,mBAAoBhB,KAAKiB,QAAQC,mBAEzC,CACAC,6BAAAA,CAA8BP,GACtBZ,KAAKU,UAAYE,EAAMC,OAAOH,SAC9BE,EAAMC,OAAOO,QACRC,QAAQC,GAAgB3B,EAAmB4B,SAASD,KACpDE,SAASF,IACV,GAAiC,qBAAtBtB,KAAKsB,GACZ,MAAM,IAAIG,MAAM,gCAADC,OAAiCJ,IAEpDtB,KAAKsB,GAAeV,EAAMC,OAAOS,EAAY,GAGzD,CACAK,iBAAAA,GACI3B,KAAKiB,QAAUjB,KAAK4B,KAAKC,QAAQ,aACjC7B,KAAKU,QAAUV,KAAKiB,QAAQP,OAChC,CACAoB,iBAAAA,GACInC,EAAmB6B,SAASO,IACxB/B,KAAK+B,GAAiB/B,KAAKiB,QAAQc,EAAc,GAEzD,CACAC,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,2CAA4CC,MAAO,CAClE,kBAAkB,EAClB,2BAA4BpC,KAAKG,SACjC,qBAAsBH,KAAKQ,cAC3B,qBAAsBR,KAAKO,mBAC1BP,KAAKK,cAAgB4B,EAAAA,EAAAA,GAAE,KAAM,CAAEG,MAAO,6FAA8FH,EAAAA,EAAAA,GAAE,eAAgB,CAAEI,YAAczB,GAAUZ,KAAKW,qBAAqBC,GAAQE,QAASd,KAAKG,SAAUC,SAAUJ,KAAKI,aAAe6B,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,6CACtS,CACA,QAAIP,GAAS,OAAOU,EAAAA,EAAAA,GAAWtC,KAAO,GAE1CJ,EAAgB2C,MA5DQ,4iC","sources":["../node_modules/@scania/tegel/dist/esm/tds-table-body-row.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-529974bd.js';\n\nconst tableBodyRowCss = \":host(.tds-table__row){box-sizing:border-box;display:table-row;border-bottom:1px solid var(--tds-table-divider);background-color:var(--tds-table-body-row-background);transition:background-color 200ms ease;color:var(--tds-table-color)}:host(.tds-table__row) *{box-sizing:border-box}:host(.tds-table__row) .tds-table__body-cell--checkbox{min-width:48px;width:48px;padding:0}:host(.tds-table__row:hover){background-color:var(--tds-table-body-row-background-hover)}:host(.tds-table__row--selected){background-color:var(--tds-table-body-row-background-selected)}:host(.tds-table__row--selected:hover){background-color:var(--tds-table-body-row-background-selected-hover)}:host(.tds-table__row--hidden){display:none}:host(.tds-table__row--expended){width:100%;background-color:pink}:host .tds-form-label--table{width:100%;height:48px;display:flex;justify-content:center;align-items:center;cursor:pointer}:host(.tds-table__compact) .tds-form-label--table{height:32px}:host(.tds-table--divider) .tds-table__body-cell--checkbox{border-right:1px solid var(--tds-table-divider)}\";\nconst TdsTableBodyRowStyle0 = tableBodyRowCss;\n\nconst relevantTableProps = [\n    'multiselect',\n    'verticalDividers',\n    'compactDesign',\n];\nconst TdsTableBodyRow = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.tdsSelect = createEvent(this, \"tdsSelect\", 6);\n        this.selected = false;\n        this.disabled = false;\n        this.multiselect = false;\n        this.mainCheckBoxStatus = false;\n        this.verticalDividers = false;\n        this.compactDesign = false;\n        this.noMinWidth = false;\n        this.tableId = '';\n    }\n    async handleCheckboxChange(event) {\n        this.selected = event.detail.checked;\n        this.tdsSelect.emit({\n            tableId: this.tableId,\n            checked: this.selected,\n            selectedRows: await this.tableEl.getSelectedRows(),\n        });\n    }\n    internalTdsPropChangeListener(event) {\n        if (this.tableId === event.detail.tableId) {\n            event.detail.changed\n                .filter((changedProp) => relevantTableProps.includes(changedProp))\n                .forEach((changedProp) => {\n                if (typeof this[changedProp] === 'undefined') {\n                    throw new Error(`Table prop is not supported: ${changedProp}`);\n                }\n                this[changedProp] = event.detail[changedProp];\n            });\n        }\n    }\n    connectedCallback() {\n        this.tableEl = this.host.closest('tds-table');\n        this.tableId = this.tableEl.tableId;\n    }\n    componentWillLoad() {\n        relevantTableProps.forEach((tablePropName) => {\n            this[tablePropName] = this.tableEl[tablePropName];\n        });\n    }\n    render() {\n        return (h(Host, { key: '4d4328aa863f838b14a43d98fe356a39fd497860', class: {\n                'tds-table__row': true,\n                'tds-table__row--selected': this.selected,\n                'tds-table__compact': this.compactDesign,\n                'tds-table--divider': this.verticalDividers,\n            } }, this.multiselect && (h(\"td\", { class: \"tds-table__body-cell tds-table__body-cell--checkbox tds-form-label tds-form-label--table\" }, h(\"tds-checkbox\", { onTdsChange: (event) => this.handleCheckboxChange(event), checked: this.selected, disabled: this.disabled }))), h(\"slot\", { key: 'e6c0cab232ece7b5ff14f3283478de5b36f405c7' })));\n    }\n    get host() { return getElement(this); }\n};\nTdsTableBodyRow.style = TdsTableBodyRowStyle0;\n\nexport { TdsTableBodyRow as tds_table_body_row };\n"],"names":["relevantTableProps","TdsTableBodyRow","constructor","hostRef","registerInstance","this","tdsSelect","createEvent","selected","disabled","multiselect","mainCheckBoxStatus","verticalDividers","compactDesign","noMinWidth","tableId","handleCheckboxChange","event","detail","checked","emit","selectedRows","tableEl","getSelectedRows","internalTdsPropChangeListener","changed","filter","changedProp","includes","forEach","Error","concat","connectedCallback","host","closest","componentWillLoad","tablePropName","render","h","Host","key","class","onTdsChange","getElement","style"],"sourceRoot":""}