{"version":3,"file":"static/js/3003.480b5b4d.chunk.js","mappings":"mLAEA,MAGMA,EAAe,MACjBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAW,EAChBD,KAAKE,UAAW,EAChBF,KAAKG,cAAWC,CACpB,CAEA,iBAAMC,CAAYC,GACdN,KAAKG,SAAWG,CACpB,CAEA,iBAAMC,CAAYL,GACdF,KAAKE,SAAWA,CACpB,CACAM,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,2CAA4CC,KAAM,aAAcH,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CE,MAAO,GAAFC,OAAKd,KAAKC,SAAW,WAAa,GAAE,wBAAAa,OAChLd,KAAKE,SAAW,WAAa,IAAMa,MAAO,CAAET,MAAO,GAAFQ,OAAKd,KAAKG,SAAQ,SAAUM,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,8CAC9G,GAEJf,EAAamB,MAvBQ,ovD","sources":["../node_modules/@scania/tegel/dist/esm/tds-folder-tab.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-529974bd.js';\n\nconst folderTabCss = \":host{box-sizing:border-box;position:relative}:host *{box-sizing:border-box}:host ::slotted(*){all:unset;min-width:142px;display:block;width:calc(100% - 32px);font:var(--tds-headline-07) !important;letter-spacing:var(--tds-headline-07-ls) !important;cursor:pointer;padding:16px;white-space:nowrap;text-decoration:none;text-align:left;outline:none;border:none;border-left:1px solid;border-left-color:transparent}:host ::slotted(*:focus-visible){outline:2px solid var(--tds-blue-400);outline-offset:-2px}:host div:not(.selected){background-color:var(--tds-folder-tab-background)}:host div:not(.selected) ::slotted(*){border-left-color:var(--tds-folder-tab-divider-color);border-top:2px solid var(--tds-folder-tab-background);color:var(--tds-folder-tab-item-color)}:host div:not(.selected):hover:not(.disabled){background-color:var(--tds-folder-tab-background-hover);cursor:pointer}:host div:not(.selected):hover:not(.disabled) ::slotted(*){border-top-color:var(--tds-folder-tab-background-hover);color:var(--tds-folder-tab-color)}:host div:not(.selected).disabled ::slotted(*){color:var(--tds-folder-tab-item-color-disabled)}:host div:not(.selected).disabled ::slotted(*:focus-visible){outline:none}:host div:not(.selected).disabled ::slotted(*:hover){cursor:not-allowed}:host div:not(.selected).disabled ::slotted(*::after){content:none}:host .selected{background-color:var(--tds-folder-tab-background-selected);border-top:2px solid var(--tds-folder-tab-border-selected)}:host .selected::after{content:\\\" \\\";background-color:var(--tds-folder-tab-background-selected);width:1px;top:0;bottom:0;right:-1px;display:block;position:absolute;z-index:1}:host .selected ::slotted(*){color:var(--tds-folder-tab-color)}:host(.first) :not(.selected) ::slotted(*){border-left-color:transparent}\";\nconst TdsFolderTabStyle0 = folderTabCss;\n\nconst TdsFolderTab = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.disabled = false;\n        this.selected = false;\n        this.tabWidth = undefined;\n    }\n    /** @internal Method to set the width of the tab. Used by the <tds-folder-tabs> */\n    async setTabWidth(width) {\n        this.tabWidth = width;\n    }\n    /** @internal Method to set the tab as selected. Used by the <tds-folder-tabs> */\n    async setSelected(selected) {\n        this.selected = selected;\n    }\n    render() {\n        return (h(Host, { key: '032b4d95a93760db31444194d7b21a0b9b581009', role: \"listitem\" }, h(\"div\", { key: '2c7b72725e53390bce85ba156adb3ba05fe5e406', class: `${this.disabled ? 'disabled' : ''}\n                  ${this.selected ? 'selected' : ''}`, style: { width: `${this.tabWidth}px` } }, h(\"slot\", { key: '372ea4281495f89a49099001f6c15e9ecb9caa34' }))));\n    }\n};\nTdsFolderTab.style = TdsFolderTabStyle0;\n\nexport { TdsFolderTab as tds_folder_tab };\n"],"names":["TdsFolderTab","constructor","hostRef","registerInstance","this","disabled","selected","tabWidth","undefined","setTabWidth","width","setSelected","render","h","Host","key","role","class","concat","style"],"sourceRoot":""}