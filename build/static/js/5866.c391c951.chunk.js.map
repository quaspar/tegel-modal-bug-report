{"version":3,"file":"static/js/5866.c391c951.chunk.js","mappings":"gIAQA,SAASA,EAAIC,EAAYC,GAAuC,IAAtBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClD,GAAIH,aAAsBM,aAAeL,EAAgBD,GACrD,OAAOA,EAEX,MAAMO,EAAgBP,aAAsBQ,gBACtCR,EAAWS,iBAAiB,CAAEC,SAAS,IACvCC,MAAMC,KAAKZ,EAAWa,UACxBX,GAAgBF,aAAsBM,aAAeN,EAAWc,YAChEP,EAAcQ,QAAQJ,MAAMC,KAAKZ,EAAWc,WAAWD,WAE3D,IAAIG,EAAe,KAKnB,OAJAT,EAAcU,MAAMC,IAChBF,EAAejB,EAAImB,EAAOjB,EAAiBC,GACnB,OAAjBc,KAEJA,CACX,C,kGCrBA,MAGMG,EAAkB,MACpBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAW,EAChBD,KAAKE,QAAS,EACdF,KAAKG,WAAY,CACrB,CACAC,aAAAA,CAAc1B,EAAiB2B,GAC3B,MACMC,EADmBN,KAAKO,OAAOrB,iBAAiB,CAAEC,SAAS,IACpB,GAC7C,GAAImB,EAAqB,CACrB,MAAMb,GAAejB,EAAAA,EAAAA,GAAI8B,EAAqB5B,GAC1Ce,GACAY,EAAiBZ,EAEzB,CACJ,CAIAe,qBAAAA,GACI,GAAIR,KAAKO,OAAQ,CACb,MAAME,EAAeC,GAA8C,aAAlCA,EAAQC,QAAQC,eAAkE,QAAlCF,EAAQC,QAAQC,cAC3FC,EAAgBH,IAClBA,EAAQI,UAAUC,IAAI,6BAClBf,KAAKG,UACLO,EAAQI,UAAUC,IAAI,uCAGtBL,EAAQI,UAAUE,OAAO,sCAC7B,EAEJhB,KAAKI,cAAcK,EAAaI,EACpC,CACJ,CACAI,iBAAAA,GACI,IAAIC,EAGJlB,KAAKmB,WAAanB,KAAKoB,KAAKC,QAAQ,iBACpCrB,KAAKG,UAAuC,QAA1Be,EAAKlB,KAAKmB,kBAA+B,IAAPD,OAAgB,EAASA,EAAGf,SACpF,CACAmB,gBAAAA,GACItB,KAAKO,OAASP,KAAKoB,KAAK7B,WAAWgC,cAAc,QACjDvB,KAAKQ,wBACLR,KAAKO,OAAOiB,iBAAiB,aAAcxB,KAAKQ,sBACpD,CACAiB,4BAAAA,CAA6BC,GACzB1B,KAAKG,UAAYuB,EAAMC,OAAOxB,UAC9BH,KAAKQ,uBACT,CACAoB,MAAAA,GACI,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,IAAK,6CAA8CF,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAK,2CAA4CC,MAAO,CAChI,WAAa,EACb,qBAAsBhC,KAAKC,SAC3B,mBAAoBD,KAAKE,OACzB,sBAAuBF,KAAKG,aAC3B0B,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAK,8CAC9B,CACA,QAAIX,GAAS,OAAOa,EAAAA,EAAAA,GAAWjC,KAAO,GAE1CJ,EAAgBsC,MAhEQ,6+C","sources":["../node_modules/@scania/tegel/dist/esm/dfs-1e574d5f.js","../node_modules/@scania/tegel/dist/esm/tds-side-menu-item.entry.js"],"sourcesContent":["/**\n * Recursively finds the first matching element or child based on a provided condition.\n *\n * @param {ParentNode} parentNode - The starting element or shadow root to search from.\n * @param {(el: HTMLElement) => boolean} searchPredicate - The condition to match the element, receives an HTMLElement and returns a boolean.\n * @param {boolean} [pierceShadow=false] - Whether to pierce through shadow DOM boundaries.\n * @returns {HTMLElement | null} - The first matching element or child, or null if none is found.\n */\nfunction dfs(parentNode, searchPredicate, pierceShadow = false) {\n    if (parentNode instanceof HTMLElement && searchPredicate(parentNode)) {\n        return parentNode;\n    }\n    const childElements = parentNode instanceof HTMLSlotElement\n        ? parentNode.assignedElements({ flatten: true })\n        : Array.from(parentNode.children);\n    if (pierceShadow && parentNode instanceof HTMLElement && parentNode.shadowRoot) {\n        childElements.push(...Array.from(parentNode.shadowRoot.children));\n    }\n    let foundElement = null;\n    childElements.some((child) => {\n        foundElement = dfs(child, searchPredicate, pierceShadow);\n        return foundElement !== null;\n    });\n    return foundElement;\n}\n\nexport { dfs as d };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-529974bd.js';\nimport { d as dfs } from './dfs-1e574d5f.js';\n\nconst sideMenuItemCss = \":host{display:block}:host .component ::slotted(a),:host .component ::slotted(button){all:unset;box-sizing:border-box;height:68px;width:100%;display:flex;align-items:center;gap:12px;padding:0 24px;border:none;background-color:var(--tds-sidebar-side-menu-background-cover);font:var(--tds-headline-07);letter-spacing:var(--tds-headline-07-ls);color:var(--tds-sidebar-side-menu-single-item-color);cursor:pointer}:host .component tds-icon{color:red !important}:host .component ::slotted(a:focus-visible),:host .component ::slotted(button:focus-visible){outline:2px solid var(--tds-blue-400);outline-offset:-2px}:host .component:hover ::slotted(a),:host .component:hover ::slotted(button){background-color:var(--tds-sidebar-item-state-hover)}:host .component:active ::slotted(a),:host .component:active ::slotted(button){background-color:var(--tds-sidemenu-item-state-active)}:host .component-collapsed ::slotted(a),:host .component-collapsed ::slotted(button){padding:0;display:flex;justify-content:center;align-items:center;position:relative}:host .component-selected:not(:host .component-active) ::slotted(a),:host .component-selected:not(:host .component-active) ::slotted(button){border-left:4px solid var(--tds-sidebar-side-menu-single-subitem-selected-border-color);padding-left:20px;background-color:var(--tds-sidebar-item-state-selected)}@media (min-width: 992px){:host .component.component-collapsed ::slotted(a),:host .component.component-collapsed ::slotted(button){color:rgba(90, 90, 90, 0);overflow:hidden}}\";\nconst TdsSideMenuItemStyle0 = sideMenuItemCss;\n\nconst TdsSideMenuItem = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.selected = false;\n        this.active = false;\n        this.collapsed = false;\n    }\n    updateSlotted(searchPredicate, mutationCallback) {\n        const assignedElements = this.slotEl.assignedElements({ flatten: true });\n        const firstSlottedElement = assignedElements[0];\n        if (firstSlottedElement) {\n            const foundElement = dfs(firstSlottedElement, searchPredicate);\n            if (foundElement) {\n                mutationCallback(foundElement);\n            }\n        }\n    }\n    /**\n     * This function is needed because we can't use CSS selectors to style something in the light dom\n     */\n    updateSlottedElements() {\n        if (this.slotEl) {\n            const isIconOrSvg = (element) => element.tagName.toLowerCase() === 'tds-icon' || element.tagName.toLowerCase() === 'svg';\n            const addIconClass = (element) => {\n                element.classList.add('__tds-side-menu-item-icon');\n                if (this.collapsed) {\n                    element.classList.add('__tds-side-menu-item-icon-collapsed');\n                }\n                else {\n                    element.classList.remove('__tds-side-menu-item-icon-collapsed');\n                }\n            };\n            this.updateSlotted(isIconOrSvg, addIconClass);\n        }\n    }\n    connectedCallback() {\n        var _a;\n        // closest() will return null if side-menu-item is inside a shadowRoot that\n        // does not contain a side-menu. This is the case for the side-menu-dropdown.\n        this.sideMenuEl = this.host.closest('tds-side-menu');\n        this.collapsed = (_a = this.sideMenuEl) === null || _a === void 0 ? void 0 : _a.collapsed;\n    }\n    componentDidLoad() {\n        this.slotEl = this.host.shadowRoot.querySelector('slot');\n        this.updateSlottedElements();\n        this.slotEl.addEventListener('slotchange', this.updateSlottedElements);\n    }\n    collapseSideMenuEventHandler(event) {\n        this.collapsed = event.detail.collapsed;\n        this.updateSlottedElements();\n    }\n    render() {\n        return (h(Host, { key: 'b94e2117fa05134a3aff5fd15b5eae90203d4570' }, h(\"div\", { key: '02ebe255b0c72bdbf709c45739acfeebddec54de', class: {\n                'component': true,\n                'component-selected': this.selected,\n                'component-active': this.active,\n                'component-collapsed': this.collapsed,\n            } }, h(\"slot\", { key: '97412b94539aaa451cd5dcb8f9d962e5e0c73e0c' }))));\n    }\n    get host() { return getElement(this); }\n};\nTdsSideMenuItem.style = TdsSideMenuItemStyle0;\n\nexport { TdsSideMenuItem as tds_side_menu_item };\n"],"names":["dfs","parentNode","searchPredicate","pierceShadow","arguments","length","undefined","HTMLElement","childElements","HTMLSlotElement","assignedElements","flatten","Array","from","children","shadowRoot","push","foundElement","some","child","TdsSideMenuItem","constructor","hostRef","registerInstance","this","selected","active","collapsed","updateSlotted","mutationCallback","firstSlottedElement","slotEl","updateSlottedElements","isIconOrSvg","element","tagName","toLowerCase","addIconClass","classList","add","remove","connectedCallback","_a","sideMenuEl","host","closest","componentDidLoad","querySelector","addEventListener","collapseSideMenuEventHandler","event","detail","render","h","Host","key","class","getElement","style"],"sourceRoot":""}